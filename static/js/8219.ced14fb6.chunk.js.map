{"version":3,"file":"static/js/8219.ced14fb6.chunk.js","mappings":"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","sources":["webpack://gh-react-site/./src/pages/react/MobX/Reactions/Reactions.module.scss?2a91","pages/react/MobX/Reactions/store/store.ts","pages/react/MobX/Reactions/Reactions.tsx","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","../node_modules/@babel/runtime/helpers/esm/classCallCheck.js","../node_modules/@babel/runtime/helpers/esm/createClass.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Reactions_container__y2ojO\",\"sched\":\"Reactions_sched__WmeAc\",\"btn2\":\"Reactions_btn2__gKbTZ\",\"btn3\":\"Reactions_btn3__cjtUo\",\"btn4\":\"Reactions_btn4__9dsor\",\"btn5\":\"Reactions_btn5__paE-I\",\"btn6\":\"Reactions_btn6__TEE0d\",\"btn7\":\"Reactions_btn7__3pbEr\",\"btn8\":\"Reactions_btn8__ISVzt\",\"btn9\":\"Reactions_btn9__sdMEh\",\"pre1\":\"Reactions_pre1__WFdwW\",\"pre2\":\"Reactions_pre2__hnQLN\",\"pre3\":\"Reactions_pre3__3De0w\",\"pre4\":\"Reactions_pre4__JwaOI\",\"pre5\":\"Reactions_pre5__DX6JR\",\"pre6\":\"Reactions_pre6__u-hEk\",\"pre7\":\"Reactions_pre7__bM-OV\",\"pre8\":\"Reactions_pre8__RjBpV\",\"pre9\":\"Reactions_pre9__b5KjR\",\"sweep\":\"Reactions_sweep__j9qrU\"};","import { action, computed, makeObservable, observable } from \"mobx\"\n\nexport class Store {\n    value = 0\n\n    constructor() {\n        makeObservable(this, {\n            value: observable,\n            increment: action.bound,\n            tripleValue: computed\n        })\n    }\n\n    increment() {\n        this.value++\n        console.log(this.value)\n    }\n\n    get tripleValue() {\n        return this.value * 3\n    }\n}","import { observer, useLocalObservable } from 'mobx-react';\nimport { action, autorun, IReactionPublic, reaction, when } from 'mobx';\nimport React, { useEffect, useRef, useState } from 'react';\nimport styles from './Reactions.module.scss'\nimport { Store } from './store/store';\n\nconst Reactions = observer(() => {\n    const refValue = useRef<HTMLSpanElement>(null)\n    const refValue2 = useRef<HTMLSpanElement>(null)\n    const refValue3 = useRef<HTMLSpanElement>(null)\n    const refValue4 = useRef<HTMLSpanElement>(null)\n    const refValue5 = useRef<HTMLSpanElement>(null)\n    const refValue6 = useRef<HTMLSpanElement>(null)\n    const refMsg3 = useRef<HTMLSpanElement>(null)\n    const refValue8 = useRef<HTMLSpanElement>(null)\n    const refValue9 = useRef<HTMLSpanElement>(null)\n    const refValue10 = useRef<HTMLSpanElement>(null)\n    const refBtn = useRef<HTMLButtonElement>(null)\n    const refMsg = useRef<HTMLSpanElement>(null)\n    const refMsg2 = useRef<HTMLSpanElement>(null)\n    const [store] = useState(new Store());\n    const [store2] = useState(new Store());\n    const [store3] = useState(new Store());\n    const [store4] = useState(new Store());\n    const [store5] = useState(new Store());\n    const [store6] = useState(new Store());\n    const [store7] = useState(new Store());\n    const timer = useLocalObservable(() => ({\n        isClicked: false,\n        value: 0,\n        start() {\n            this.isClicked = false\n            this.value = 5\n        },\n        stop() {\n            this.isClicked = true\n        },\n        decrease() {\n            this.value = Math.max(this.value - 1, 0)\n        },\n        get isRunning() {\n            // console.log(`isClicked: ${this.isClicked}; value: ${this.value}; isRunning: ${!this.isClicked && this.value > 0}`)\n            return (!this.isClicked && this.value > 0)\n        }\n    }))\n\n    // when + timeout\n    useEffect(() => {\n        const dispose = autorun(() => {\n            if (timer.value === 5 && !timer.isClicked) {\n                setTimeout(() => {\n                    const handler = setInterval(() => {\n                        if (timer.isClicked || timer.value < 1) {\n                            clearInterval(handler)\n                        }\n                        else {\n                            timer.decrease()\n                        }\n                    }, 1000)\n                }, 0)\n            }\n        })\n        return () => {\n            dispose()\n        };\n    }, []);\n\n    // when + timeout\n    const startTimer = () => {\n        refMsg3.current!.textContent = \"<- Click to stop the timer\"\n        when(\n            () => timer.isClicked,\n            () => {\n                refMsg3.current!.textContent = \"Timer stopped\"\n            },\n            {\n                timeout: 5000,\n                onError: (error) => {\n                    console.log(error)\n                    refMsg3.current!.textContent = \"Time out\"\n                }\n            }\n        )\n    }\n\n    // useEffect\n    useEffect(() => {\n        refValue.current!.textContent = store.value.toString()\n    }, [store.value]);\n\n    // autorun\n    useEffect(() => {\n        const dispose = autorun(() => {\n            refValue2.current!.textContent = store2.value.toString()\n        })\n        return () => {\n            dispose()\n            console.log('autorun: disposed')\n        };\n    }, []);\n\n    // reaction\n    useEffect(() => {\n        let disposer: IReactionPublic;\n        reaction(\n            () => [store3.value, store3.tripleValue],\n            (val, prev, r) => {\n                disposer = r\n                refValue3.current!.textContent = `curr: ${val} ;  prev: ${prev}`\n            }\n        )\n        return () => {\n            console.log('reaction: disposing...')\n            console.log('disposer: ', disposer)\n            if (disposer) {\n                console.log('isDisposed_: ' + (disposer as any).isDisposed_)\n                disposer.dispose()\n                console.log('reaction: disposed')\n                console.log('isDisposed_: ' + (disposer as any).isDisposed_)\n            }\n        };\n    }, []);\n\n    // when + effect\n    useEffect(() => {\n        const dispose = autorun(() => {\n            refValue4.current!.textContent = store4.value.toString()\n            if (store4.value % 3 !== 2) {\n                refMsg.current!.textContent = \"\"\n            }\n        })\n        return () => {\n            dispose()\n        };\n    }, []);\n\n    // when + effect\n    useEffect(() => {\n        const dispose = when(\n            () => store4.value % 3 === 2,\n            () => {\n                refMsg.current!.textContent = \": value % 3 === 2\"\n            }\n        )\n        return () => {\n            dispose()\n        }\n    }, []);\n\n    // await when\n    useEffect(() => {\n        const dispose = autorun(() => {\n            refValue5.current!.textContent = store5.value.toString()\n            if (store5.value % 4 !== 3) {\n                refMsg2.current!.textContent = \"\"\n            }\n        })\n        return () => {\n            dispose()\n        };\n    }, []);\n\n    // await when\n    useEffect(() => {\n        let whenPromise: Promise<void> & { cancel(): void };\n        (async () => {\n            whenPromise = when(() => store5.value % 4 === 3)\n            await whenPromise\n            refMsg2.current!.textContent = \": store.value % 4 === 3\"\n        })()\n        return () => {\n            console.log('await when: canceling promise...')\n            whenPromise.cancel()\n            console.log('canceled')\n        }\n    }, []);\n\n    // autorun + delay (throttling)\n    useEffect(() => {\n        const dispose = autorun(() => {\n            refValue6.current!.textContent = store6.value.toString()\n        }, { delay: 1000 })\n        return () => {\n            dispose()\n        };\n    }, []);\n\n    // autorun + scheduler\n    useEffect(() => {\n        const colors = ['#f00', '#0a0', '#55f']\n        const dispose = autorun(\n            () => {\n                refValue8.current!.textContent = store7.value.toString();\n            },\n            {\n                scheduler: fn => {\n                    if (store7.value !== 6) {\n                        fn()\n                        refValue8.current!.style.color = colors[~~(store7.value / 3) % 3]\n                    }\n                }\n            }\n        )\n        let skip = false\n        const dispose2 = autorun(\n            () => {\n                const val = store7.value.toString()\n                if (!skip) {\n                    refValue9.current!.textContent = val;\n                    refValue9.current!.style.color = colors[~~(store7.value / 3) % 3]\n                }\n            },\n            {\n                scheduler: fn => {\n                    skip = store7.value === 6\n                    fn()\n                }\n            }\n        )\n        const dispose3 = autorun(\n            () => {\n                refValue10.current!.textContent = store7.value.toString();\n            },\n            {\n                scheduler: fn => {\n                    setTimeout(() => {\n                        fn()\n                        refValue10.current!.style.color = colors[~~(store7.value / 3) % 3]\n                    }, 500)\n                }\n            }\n        )\n        return () => {\n            console.log('scheduler: disposing...')\n            dispose()\n            dispose2()\n            dispose3()\n            console.log('scheduler: disposed')\n        };\n    }, []);\n\n    return (\n        <div className={styles.container}>\n            <pre className={styles.pre1}><code>{`class Store {\n    value = 0\n    constructor() {\n        makeObservable(this, {\n            value: observable,\n            increment: action.bound,\n            tripleValue: computed\n        })\n    }\n    increment() {\n        this.value++\n    }\n    get tripleValue() {\n        return this.value * 3\n    }\n}`}</code></pre>\n            <details>\n                <summary>useEffect</summary>\n                <pre className={styles.pre2}><code>{`const Cmpnnt = observer(() => {\n    const refValue = useRef<HTMLSpanElement>(null)\n    const [store] = useState(new Store());\n    useEffect(() => {\n        refValue.current!.textContent = store.value.toString()\n    }, [store.value]);\n    return (\n        <div>\n            <button onClick={store.increment}>+1</button>\n            <span ref={refValue}></span>\n        </div>\n    );\n})`}</code></pre>\n                <button onClick={store.increment} className={styles.btn2}>+1</button>\n                <span ref={refValue}></span><br />\n            </details>\n            <details>\n                <summary>autorun</summary>\n                <pre className={styles.pre3}><code>{`const Cmpnnt = observer(() => {\n    const refValue = useRef<HTMLSpanElement>(null)\n    const [store] = useState(new Store());\n    useEffect(() => {\n        const dispose = autorun(() => {\n            refValue.current!.textContent = store.value.toString()\n        })\n        return () => {\n            dispose()\n        };\n    }, []);\n    return (\n        <div>\n            <button onClick={store.increment}>+1</button>\n            <span ref={refValue}></span>\n        </div>\n    );\n})`}</code></pre>\n                <button onClick={store2.increment} className={styles.btn3}>+1</button>\n                <span ref={refValue2}></span><br />\n            </details>\n            <details>\n                <summary>reaction</summary>\n                <pre className={styles.pre4}><code>{`const Cmpnnt = observer(() => {\n    const refValue = useRef<HTMLSpanElement>(null)\n    const [store] = useState(new Store());\n    useEffect(() => {\n        let disposer: IReactionPublic;\n        reaction(\n            () => [store.value, store.tripleValue],\n            (val, prev, r) => {\n                disposer = r\n                refValue.current!.textContent = ${\"`\"}curr: ${\"$\"}{val} ;  prev: ${\"$\"}{prev}\n            }\n        )\n        return () => {\n            if (disposer) {\n                disposer.dispose()\n            }\n        };\n    }, []);\n    return (\n        <div>\n            <button onClick={store.increment}>+1</button>\n            <span ref={refValue}></span>\n        </div>\n    );\n})`}</code></pre>\n                <button onClick={store3.increment} className={styles.btn4}>+1</button>\n                <span ref={refValue3}></span><br />\n            </details>\n            <details>\n                <summary>when + effect</summary>\n                <pre className={styles.pre5}><code>{`const Cmpnnt = observer(() => {\n    const refValue = useRef<HTMLSpanElement>(null)\n    const refMsg = useRef<HTMLSpanElement>(null)\n    const [store] = useState(new Store());\n    useEffect(() => {\n        const dispose = autorun(() => {\n                refValue.current!.textContent = store.value.toString()\n            if (store.value % 3 !== 2) {\n                refMsg.current!.textContent = \"\"\n            }\n        })\n        return () => {\n            dispose()\n        };\n    }, []);\n    useEffect(() => {\n        const dispose = when(\n            () => store.value % 3 === 2,\n            () => {\n                refMsg.current!.textContent = \": value % 3 === 2\"\n            }\n        )\n        return () => {\n            dispose()\n        }\n    }, []);\n    return (\n        <div>\n            <button onClick={store.increment}>+1</button>\n            <span ref={refValue}></span>\n            <span ref={refMsg}></span>\n        </div>\n    );\n})`}</code></pre>\n                <button onClick={store4.increment} className={styles.btn5} >+1</button>\n                <span ref={refValue4}></span>\n                <span ref={refMsg}></span>\n            </details>\n            <details>\n                <summary>await when</summary>\n                <pre className={styles.pre6}><code>{`const Cmpnnt = observer(() => {\n    const refValue = useRef<HTMLSpanElement>(null)\n    const refMsg = useRef<HTMLSpanElement>(null)\n    const [store] = useState(new Store());\n    useEffect(() => {\n        const dispose = autorun(() => {\n            refValue.current!.textContent = store.value.toString()\n            if (store.value % 4 !== 3) {\n                refMsg.current!.textContent = \"\"\n            }\n        })\n        return () => {\n            dispose()\n        };\n    }, []);\n    useEffect(() => {\n        let whenPromise: Promise<void> & { cancel(): void };\n        (async () => {\n            whenPromise = when(() => store5.value % 4 === 3)\n            await whenPromise\n            refMsg2.current!.textContent = \": store.value % 4 === 3\"\n        })()\n        return () => {\n            whenPromise.cancel()\n        }\n    }, []);\n    return (\n        <div>\n            <button onClick={store.increment}>+1</button>\n            <span ref={refValue}></span>\n            <span ref={refMsg}></span>\n        </div>\n    );\n})`}</code></pre>\n                <button onClick={store5.increment} className={styles.btn6} >+1</button>\n                <span ref={refValue5}></span>\n                <span ref={refMsg2}></span>\n            </details>\n            <details>\n                <summary>autorun + delay (throttling)</summary>\n                <pre className={styles.pre7}><code>{`const Cmpnnt = observer(() => {\n    const refValue = useRef<HTMLSpanElement>(null)\n    const [store] = useState(new Store());\n    useEffect(() => {\n        const dispose = autorun(() => {\n            refValue.current!.textContent = store.value.toString()\n        }, { delay: 500 })\n        return () => {\n            dispose()\n        };\n    }, []);\n    return (\n        <div>\n            <button onClick={store.increment}>+1</button>\n            <span ref={refValue}></span>\n        </div>\n    );\n})`}</code></pre>\n                <button onClick={store6.increment} className={styles.btn7} >+1</button>\n                <span ref={refValue6}></span>\n            </details>\n            <details open>\n                <summary>when + timeout</summary>\n                <pre className={styles.pre8}><code>{`const Cmpnnt = observer(() => {\n    const refBtn = useRef<HTMLButtonElement>(null)\n    const refMsg = useRef<HTMLSpanElement>(null)\n    const timer = useLocalObservable(() => ({\n        isClicked: false,\n        value: 0,\n        start() {\n            this.isClicked = false\n            this.value = 5\n        },\n        stop() {\n            this.isClicked = true\n        },\n        decrease() {\n            this.value = Math.max(this.value - 1, 0)\n        },\n        get isRunning() {\n            return (!this.isClicked && this.value > 0)\n        }\n    }))\n    useEffect(() => {\n        const dispose = autorun(() => {\n            if (timer.value === 5 && !timer.isClicked) {\n                setTimeout(() => {\n                    const handler = setInterval(() => {\n                        if (timer.isClicked || timer.value < 1) {\n                            clearInterval(handler)\n                        }\n                        else {\n                            timer.decrease()\n                        }\n                    }, 1000)\n                }, 0)\n            }\n        })\n        return () => {\n            dispose()\n        };\n    }, []);\n    const startTimer = () => {\n        refMsg.current!.textContent = \"<- Click to stop the timer\"\n        when(\n            () => timer.isClicked,\n            () => {\n                refMsg.current!.textContent = \"Timer stopped\"\n            },\n            {\n                timeout: 5000,\n                onError: (error) => {\n                    refMsg.current!.textContent = \"Time out\"\n                }\n            }\n        )\n    }\n    return (\n        <div>\n            <button\n                onClick={() => {\n                    timer.start()\n                    startTimer()\n                }}\n                disabled={timer.isRunning}\n            >Run</button>\n            <button\n                ref={refBtn}\n                onClick={timer.stop}\n                disabled={!timer.isRunning}\n            >{timer.value} sec</button>\n            <span ref={refMsg}></span>\n        </div>\n    );\n})`}</code></pre>\n                <button\n                    onClick={() => {\n                        timer.start()\n                        startTimer()\n                    }}\n                    disabled={timer.isRunning}\n                    className={styles.btn8}\n                >Run</button>\n                <button\n                    ref={refBtn}\n                    onClick={timer.stop}\n                    disabled={!timer.isRunning}\n                    className={styles.btn8}\n                >{timer.value} sec</button>\n                <span ref={refMsg3}></span>\n            </details>\n            <details>\n                <summary>autorun + scheduler</summary>\n                <pre className={styles.pre9}><code>{`const Cmpnnt = observer(() => {\n    const refValue = useRef<HTMLSpanElement>(null)\n    const [store] = useState(new Store());\n    useEffect(() => {\n        const colors = ['red', 'green', 'blue']\n        const dispose = autorun(\n            () => {\n                refValue.current!.textContent = store.value.toString();\n            },\n            {\n                scheduler: fn => {\n                    if (store.value !== 6) { \n                        fn() \n                        refValue.current!.style.color = colors[~~(store.value / 3) % 3]\n                    }\n                }\n            }\n        )\n        let skip = false\n        const dispose2 = autorun(\n            () => {\n                const val = store.value.toString()\n                if (!skip) {\n                    refValue2.current!.textContent = val;\n                    refValue2.current!.style.color = colors[~~(store.value / 3) % 3]\n                }\n            },\n            {\n                scheduler: fn => {\n                    skip = store.value === 6\n                    fn()\n                }\n            }\n        )\n        const dispose3 = autorun(\n            () => {\n                refValue3.current!.textContent = store.value.toString();\n            },\n            {\n                scheduler: fn => {\n                    setTimeout(() => {\n                        fn()\n                        refValue3.current!.style.color = colors[~~(store.value / 3) % 3]\n                    }, 500)\n                }\n            }\n        )\n        return () => {\n            dispose()\n            dispose2()\n            dispose3()\n        };\n    }, []);\n    return (\n        <div>\n            <button onClick={action(() => store.value = 0)} className={styles.btn9} >Reset</button>\n            <button onClick={store.increment}>+1</button>\n            <span ref={refValue}></span>\n            <span ref={refValue2}></span>\n            <span ref={refValue3}></span>\n        </div>\n    );\n})`}</code></pre>\n                <button onClick={action(() => store7.value = 0)} className={styles.btn9} >Reset</button>\n                <button onClick={() => store7.increment()} className={styles.btn9} >+1</button>\n                <span ref={refValue8} className={styles.sched}></span>\n                <span ref={refValue9} className={styles.sched}></span>\n                <span ref={refValue10} className={styles.sched}></span>\n            </details>\n        </div>\n    );\n})\n\nexport default Reactions;\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}"],"names":["Store","value","makeObservable","this","observable","increment","action","tripleValue","computed","console","log","observer","refValue","useRef","refValue2","refValue3","refValue4","refValue5","refValue6","refMsg3","refValue8","refValue9","refValue10","refBtn","refMsg","refMsg2","useState","store","store2","store3","store4","store5","store6","store7","timer","useLocalObservable","isClicked","start","stop","decrease","Math","max","isRunning","useEffect","dispose","autorun","setTimeout","handler","setInterval","clearInterval","current","textContent","toString","disposer","reaction","val","prev","r","isDisposed_","when","whenPromise","cancel","delay","colors","scheduler","fn","style","color","skip","dispose2","dispose3","className","styles","onClick","ref","open","timeout","onError","error","disabled","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","done","Promise","then","_asyncToGenerator","self","args","arguments","apply","err","undefined","_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","_createClass","protoProps","staticProps","prototype"],"sourceRoot":""}