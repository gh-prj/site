{"version":3,"file":"static/js/606.47a1df2b.chunk.js","mappings":"gMACA,MAA4B,0B,SCQtBA,GAAiB,OAAIC,MAAM,KAAKC,KAAI,SAACC,EAAGC,GAAJ,MAAW,CAAEC,GAAID,EAAI,EAAGE,KAAK,WAAD,OAAaF,EAAI,OA2BvF,EAzBe,WACX,OAA8BG,EAAAA,EAAAA,UAAmBP,GAAjD,eAAOQ,EAAP,KAAgBC,EAAhB,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACMC,GAAYC,EAAAA,EAAAA,QAAO,MACnBC,GAAWD,EAAAA,EAAAA,QAAO,MASxB,OCtBW,SACXD,EACAE,EACAJ,EACAK,GAEA,IAAMC,GAAWH,EAAAA,EAAAA,WACjBI,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAoC,CACtCC,KAAMP,EAAUQ,QAChBC,WAAY,MACZC,UAAW,IASf,OAPAN,EAASI,QAAU,IAAIG,sBAAqB,YAAe,IAAbC,GAAY,eACtDC,QAAQC,IAAI,CAAChB,EAASc,EAAOG,iBAC1BjB,GAAWc,EAAOG,gBACjBZ,MAELG,GACHF,EAASI,QAAQQ,QAAQd,EAASM,SAC3B,WAC2B,IAAD,EAAN,MAApBN,EAASM,UACR,UAAAJ,EAASI,eAAT,SAAkBS,UAAUf,EAASM,aAG9C,CAACL,IDJJe,CAAUlB,EAAWE,EAAUJ,GAPhB,WACXC,GAAW,GACXoB,YAAW,WACPtB,EAAW,GAAD,eAAKD,IAAL,QAAiB,OAAIP,MAAM,KAAKC,KAAI,SAACC,EAAGC,GAAJ,MAAW,CAAEC,GAAIG,EAAQwB,OAAS5B,EAAI,EAAGE,KAAK,WAAD,OAAaE,EAAQwB,OAAS5B,EAAI,UAC7HO,GAAW,KACZ,SAIH,gBAAKsB,UAAWC,EAAkBC,IAAKvB,EAAvC,UACI,2BACKJ,EAAQN,KAAI,SAAAkC,GAAM,OACf,2BAAsBA,EAAO/B,GAA7B,KAAmC+B,EAAO9B,OAAhC8B,EAAO/B,QAErB,gBAAK8B,IAAKrB,EAAUuB,MAAO,CAAEC,WAAY,MAAOC,MAAO,OAAQC,OAAQ,a,+EE1BxE,SAASC,EAAmBC,GACzC,OCJa,SAA4BA,GACzC,GAAIzC,MAAM0C,QAAQD,GAAM,OAAO,EAAAE,EAAA,GAAiBF,GDGzC,CAAkBA,IELZ,SAA0BG,GACvC,GAAsB,qBAAXC,QAAmD,MAAzBD,EAAKC,OAAOC,WAA2C,MAAtBF,EAAK,cAAuB,OAAO5C,MAAM+C,KAAKH,GFInF,CAAgBH,KAAQ,EAAAO,EAAA,GAA2BP,IGLvE,WACb,MAAM,IAAIQ,UAAU,wIHIwE","sources":["webpack://gh-react-site/./src/pages/react/Scroll/Scroll.module.scss?c258","pages/react/Scroll/Scroll.tsx","hooks/useScroll.ts","../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Scroll_container__cp5yV\"};","import React, { useRef, useState } from 'react';\nimport useScroll from '../../../hooks/useScroll';\nimport styles from './Scroll.module.scss'\n\ninterface Record {\n    id: number\n    text: string\n}\n\nconst initialRecords = [...Array(40)].map((_, i) => ({ id: i + 1, text: `Record #${i + 1}` }))\n\nconst Scroll = () => {\n    const [records, setRecords] = useState<Record[]>(initialRecords);\n    const [canLoad, setCanLoad] = useState(true);\n    const parentRef = useRef(null)\n    const childRef = useRef(null)\n    const onLoad = () => {\n        setCanLoad(false)\n        setTimeout(() => {\n            setRecords([...records, ...[...Array(40)].map((_, i) => ({ id: records.length + i + 1, text: `Record #${records.length + i + 1}` }))])\n            setCanLoad(true)\n        }, 300);\n    }\n    useScroll(parentRef, childRef, canLoad, onLoad)\n    return (\n        <div className={styles.container} ref={parentRef}>\n            <div>\n                {records.map(record =>\n                    <div key={record.id}>{record.id}. {record.text}</div>\n                )}\n                <div ref={childRef} style={{ background: 'red', width: \"100%\", height: 10 }}></div>\n            </div>\n        </div>\n    );\n}\n\nexport default Scroll;\n","import { useRef, useEffect} from 'react'\n\nexport default function useScroll(\n    parentRef: React.RefObject<Element>,\n    childRef: React.RefObject<Element>,\n    canLoad: boolean,\n    callback: () => void\n) {\n    const observer = useRef<IntersectionObserver>()\n    useEffect(() => {\n        const options: IntersectionObserverInit = {\n            root: parentRef.current,\n            rootMargin: '0px',\n            threshold: 0.7\n        }\n        observer.current = new IntersectionObserver(([target]) => {\n            console.log([canLoad, target.isIntersecting])\n            if(canLoad && target.isIntersecting) {\n                callback()\n            }\n        }, options)\n        observer.current.observe(childRef.current!)\n        return () => {\n            if(childRef.current != null) {\n                observer.current?.unobserve(childRef.current)\n            }\n        };\n    }, [callback]);\n}\n","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}"],"names":["initialRecords","Array","map","_","i","id","text","useState","records","setRecords","canLoad","setCanLoad","parentRef","useRef","childRef","callback","observer","useEffect","options","root","current","rootMargin","threshold","IntersectionObserver","target","console","log","isIntersecting","observe","unobserve","useScroll","setTimeout","length","className","styles","ref","record","style","background","width","height","_toConsumableArray","arr","isArray","arrayLikeToArray","iter","Symbol","iterator","from","unsupportedIterableToArray","TypeError"],"sourceRoot":""}