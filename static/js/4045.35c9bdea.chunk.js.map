{"version":3,"file":"static/js/4045.35c9bdea.chunk.js","mappings":"qNAaA,EAXkB,WAChB,IAAMA,GAAQC,EAAAA,EAAAA,QAAO,GAOrB,OAJAC,EAAAA,EAAAA,YAAU,WACRF,EAAMG,cAGD,wCAAgBH,EAAMG,QAAtB,Q,+CCFHC,EAAoB,SAAC,GAAyD,IAAvDC,EAAsD,EAAtDA,SAAUC,EAA4C,EAA5CA,QAASC,EAAmC,EAAnCA,YAAaC,EAAsB,EAAtBA,MAAUC,GAAY,YACjF,OACE,iBAAKC,MAAO,CACVC,QAAS,cACTC,cAAe,UAFjB,eAIaC,IAAVL,IAAwBA,EAAMM,OAASN,GAAQ,yCAChD,mCAAQF,QAASA,GAAaG,GAA9B,aAAsCJ,KACrCE,IAAe,SAAC,EAAD,QAKtB,IACaQ,EAAiBC,EAAAA,KAAWZ,G,qCCOzC,EAhByB,SAAC,GAAgD,IAA9CC,EAA6C,EAA7CA,SAAUE,EAAmC,EAAnCA,YAAaC,EAAsB,EAAtBA,MAAUC,GAAY,YACrE,OACI,iBAAKC,MAAO,CACRC,QAAS,cACTC,cAAe,UAFnB,eAMeC,IAAVL,IAAwBA,EAAMM,OAASN,GAAQ,yCAEhD,oCAAWC,GAAX,aAAmBJ,KACjBE,IAAe,SAAC,EAAD,QCvB7B,EAA4B,+BCoB5B,EAhBoB,WAChB,OAA0BU,EAAAA,EAAAA,UAAS,GAAnC,eAAOC,EAAP,KAAcC,EAAd,KACMb,EAAU,WACZa,GAAS,SAAAC,GAAC,OAAIA,EAAI,MAEhBC,GAAKC,EAAAA,EAAAA,cAAY,kBAAMhB,MAAW,IAClCiB,GAAWC,EAAAA,EAAAA,UAAQ,iBAAO,CAAEC,aAAc,KAAM,IACtD,OACI,iBAAKC,UAAWC,EAAhB,WACI,SAAC,EAAD,CAAOjB,MAAO,CAAEkB,WAAY,OAAQC,OAAQ,qBAAuBtB,aAAW,EAACC,MAAM,QAArF,SAA8FU,KAC9F,SAAC,EAAD,CAAQZ,QAASA,EAASC,aAAW,EAACC,MAAM,kBAAkBE,MAAO,CAAEe,aAAc,GAArF,yBACA,SAACV,EAAD,CAAgBT,QAASe,EAAId,aAAW,EAACC,MAAM,mBAAmBE,MAAOa,EAAzE","sources":["components/UI/RenderCnt.jsx","components/UI/Button.tsx","components/UI/Label.tsx","webpack://gh-react-site/./src/pages/react/hooks/useCallback/UseCallback.module.scss?123a","pages/react/hooks/useCallback/UseCallback.tsx"],"sourcesContent":["import React, { useEffect, useRef } from \"react\";\n\nconst RenderCnt = () => {\n  const count = useRef(1);\n  // console.log(\"RenderCnt\");\n\n  useEffect(() => {\n    count.current++;\n  });\n\n  return <div> Renders: {count.current} </div>;\n};\n\nexport default RenderCnt;\n","import React, { FC, HTMLAttributes } from \"react\";\nimport RenderCnt from \"./RenderCnt\";\n\ninterface Props extends HTMLAttributes<HTMLButtonElement> {\n  onClick: () => void\n  showRenders?: boolean\n}\n\nconst Button: FC<Props> = ({ children, onClick, showRenders, title, ...props }) => {\n  return (\n    <div style={{\n      display: 'inline-flex',\n      flexDirection: 'column',\n    }}>\n      {title !== undefined && (title.trim() ? title : <>&nbsp;</>)}\n      <button onClick={onClick} {...props}>{children}</button>\n      {showRenders && <RenderCnt />}\n    </div>\n  )\n};\n\nexport default Button\nexport const MemoizedButton = React.memo(Button)\n","import React, { FC, HTMLAttributes } from 'react';\nimport RenderCnt from './RenderCnt';\n\n// interface PropsPart {\n//     children: React.ReactNode\n//     showRenders?: boolean\n//     style?: React.CSSProperties\n// }\n// type Props = PropsPart & React.HTMLProps<HTMLDivElement>\ninterface Props extends HTMLAttributes<HTMLLabelElement> {\n    showRenders?: boolean\n}\n\nconst Label: FC<Props> = ({ children, showRenders, title, ...props }) => {\n    return (\n        <div style={{\n            display: 'inline-flex',\n            flexDirection: 'column',\n            // ...style,\n            // background: 'inherit'\n        }} >\n            {title !== undefined && (title.trim() ? title : <>&nbsp;</>)}\n            {/* <label style={{ background: style?.background || 'inherit' }}> */}\n            <label {...props}>{children}</label>\n            { showRenders && <RenderCnt />}\n        </div >\n    );\n}\n\nexport default Label;\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"UseCallback_container__tA-n1\"};","import React, { useCallback, useMemo, useState } from 'react';\nimport Button, { MemoizedButton } from '../../../../components/UI/Button';\nimport Label from '../../../../components/UI/Label';\nimport styles from './UseCallback.module.scss'\n\nconst UseCallback = () => {\n    const [value, setValue] = useState(0);\n    const onClick = () => {\n        setValue(x => x + 1)\n    }\n    const cb = useCallback(() => onClick(), [])\n    const styleBtn = useMemo(() => ({ borderRadius: 5 }), [])\n    return (\n        <div className={styles.container}>\n            <Label style={{ background: '#dfd', border: '2px solid #595959' }} showRenders title=\"State\">{value}</Label>\n            <Button onClick={onClick} showRenders title=\"onClick = {...}\" style={{ borderRadius: 5 }}>State += 1</Button>\n            <MemoizedButton onClick={cb} showRenders title=\"memo+useCallback\" style={styleBtn}>State += 1</MemoizedButton>\n        </div>\n    );\n}\n\nexport default UseCallback;\n"],"names":["count","useRef","useEffect","current","Button","children","onClick","showRenders","title","props","style","display","flexDirection","undefined","trim","MemoizedButton","React","useState","value","setValue","x","cb","useCallback","styleBtn","useMemo","borderRadius","className","styles","background","border"],"sourceRoot":""}