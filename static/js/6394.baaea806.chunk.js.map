{"version":3,"file":"static/js/6394.baaea806.chunk.js","mappings":"wLACA,MAA4B,wBAA5B,EAAsF,oBAAtF,EAAkH,oBAAlH,EAA8I,oBAA9I,EAAgN,wBAAhN,EAA+O,mBAA/O,EAAwQ,kBAAxQ,EAAmS,qBAAnS,EAAgU,oB,SCmDhU,EA7Ca,WACT,OAA0BA,EAAAA,EAAAA,UAAS,KAAnC,0BACU,SAACC,GAAmC,IAAD,IACzCC,QAAQC,IAAR,UAAYF,EAAEG,SAAd,aAAY,EAAKC,YAAY,GAA7B,UAAiCJ,EAAEK,SAAnC,aAAiC,EAAKC,eAE1CC,CAAE,IAIFN,QAAQC,IAFc,IACA,OCfnB,WAKCD,QAAQC,IAAe,EAAO,CAAC,EAAG,EAAG,IAOrCD,QAAQC,IAAO,CAAC,EAAG,EAAG,GAFTM,QASb,IAAMC,EAAK,SAAoBC,GAC3B,OAAOA,EAAEF,QAEbP,QAAQC,IAAIO,EAAG,CAAC,EAAG,EAAG,EAAG,KAIzBR,QAAQC,IAAIO,EAAG,CAAEN,EAAG,EAAGE,EAAG,EAAGG,OAAQ,KAQrCP,QAAQC,IADO,GASfD,QAAQC,MADoB,EAAM,KAAK,MAAO,EAAM,OAAO,KAAO,EAAC,GAAO,GAAG,QAAQ,GAAK,EAAE,OAAQ,EAAM,MAAM,KAAO,KAKvH,IAAMS,EAAM,CAAC,EAAG,EAAG,EAAG,EAAG,GACzBV,QAAQC,IACJS,EACA,UAAIA,GAAKC,MAAK,SAACT,EAAGE,GAAJ,OAAUQ,KAAKC,SAAW,IAAM,EAAI,KAClDH,EAAII,QAAO,SAAAC,GAAC,OAAIH,KAAKC,SAAW,OAMpC,IAAMG,EAAI,IAAIC,SAAQ,SAAAC,GAClBC,YAAW,WAAQD,EAAQ,SAAU,QAEzClB,QAAQC,IAAI,mBACDe,EAAEI,MAAK,SAAAC,GAAI,OAAIrB,QAAQC,IAAI,qBAAuBoB,MAC1DD,MAAK,SAAAC,GAAI,OAAIrB,QAAQC,IAAI,SAAWoB,MACvCrB,QAAQC,IAAI,gBAIZD,QAAQC,IAAIqB,MAAMC,KAAK,IAAIC,IAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,KAAKb,QAChE,IAAMc,EAAM,IAAID,IAAI,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAChDxB,QAAQC,IAAIwB,GAEZzB,QAAQC,IAAI,CAAC,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,IAAIyB,QDpDpCC,GAQA,OACI,iBAAKC,UAAWC,EAAhB,kBAEI,gBAAKC,MAAO,CAAEC,WAAY,OAA1B,SATC,oDAWD,iBAAKH,UAAWC,EAAhB,WACI,oBACA,oBACA,oBACA,oBACA,uBAEJ,iBAAKD,UAAWC,EAAhB,WACI,oBACA,oBACA,uBAEJ,gBAAKD,UAAWC,KAChB,gBAAKD,UAAS,UAAKC,EAAL,YAAyBA,EAAzB,YAAwCA,EAAxC,YAAsDA,MACpE,gBAAKD,UAAWC,EAAhB,UACI","sources":["webpack://gh-react-site/./src/pages/Test/Test.module.scss?8eef","pages/Test/Test.tsx","pages/Test/Test2.ts"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Test_container__GMuS3\",\"test\":\"Test_test__nOArX\",\"test2\":\"Test_test2__4nsEQ\",\"test3\":\"Test_test3__XxIGp\",\"test4\":\"Test_test4__L6yQ3\",\"square50\":\"Test_square50__ZwdbE\",\"square200\":\"Test_square200__001gU\",\"mt10\":\"Test_mt10__3QYWr\",\"red\":\"Test_red__cR-1x\",\"zigzag\":\"Test_zigzag__gKV-3\",\"test5\":\"Test_test5__BA68R\"};","import React, { ChangeEvent, useEffect, useLayoutEffect, useRef, useState } from 'react';\nimport { f7 } from './Test2'\nimport styles from './Test.module.scss'\n\ntype Tp = string | number;\ntype Tx<T extends Tp> = T;\n\nconst Test = () => {\n    const [value, setValue] = useState(\"2\");\n    const f = (o: { a?: number, b?: string }) => {\n        console.log(o.a?.toPrecision(2), o.b?.toUpperCase())\n    }\n    f({})\n    // const t: Tx<boolean> = true; // TS2344: Type 'boolean' does not satisfy the constraint 'Tp'\n    const t: Tx<number> = 235;\n    const v: Tx<string> = '235';\n    console.log(t, v)\n\n    f7();\n\n    const msg =\n        `x       x\n  x   x\n    x\n  x   x \nx       x`\n    return (\n        <div className={styles.container}>\n            Test\n            <div style={{ whiteSpace: 'pre' }}>{msg}</div>\n            {/* <div className={styles.test}></div> */}\n            <div className={styles.test2}>\n                <div></div>\n                <div></div>\n                <div></div>\n                <div></div>\n                <div></div>\n            </div>\n            <div className={styles.test3}>\n                <div></div>\n                <div></div>\n                <div></div>\n            </div>\n            <div className={styles.test4}></div>\n            <div className={`${styles.square200} ${styles.mt10} ${styles.red} ${styles.zigzag}`}></div>\n            <div className={styles.test5}>\n                <div></div>\n            </div>\n        </div >\n    );\n}\n\nexport default Test;\n\n// const X = (): void => {\n//     const fn = <T>(x:T):T=>{\n//     return x\n//     }\n// }","export function f7() {\n    {\n        const fn = <T>(x: T): T => {\n            return x\n        }\n        console.log(fn<number>(7), fn([1, 2, 3]))\n    }\n\n    {\n        const fn = <T>(x: T[]): number => {\n            return x.length\n        }\n        console.log(fn([1, 2, 3]))\n    }\n\n    {\n        interface ILength {\n            length: number\n        }\n        const fn = <T extends ILength>(x: T) => {\n            return x.length\n        }\n        console.log(fn([1, 2, 3, 5]))\n        // TS2345: Argument of type '{ a: number; b: number; }' is not assignable to parameter of type 'ILength'.\n        // Object literal may only specify known properties, and 'a' does not exist in type 'ILength'.\n        // console.log(fn({a:1, b:2})) \n        console.log(fn({ a: 1, b: 2, length: 5 }))\n    }\n\n    {\n        const getProperty = <T, K extends keyof T>(obj: T, key: K): number => {\n            return obj[key] as unknown as number;\n        }\n        const x = { a: 1, b: 2, c: 3 };\n        console.log(getProperty(x, \"a\"))\n        // TS2345: Argument of type '\"d\"' is not assignable to parameter of type '\"a\" | \"b\" | \"c\"'\n        // console.log(getProperty(x, \"d\"))\n    }\n\n    {\n        // @ts-ignore\n        const iAmBeautiful = () => (![] + [])[+[]] + (![] + [])[+!+[]] + ([![]] + [][[]])[+!+[] + [+[]]] + (![] + [])[!+[] + !+[]];\n        console.log(iAmBeautiful())\n    }\n\n    {\n        const arr = [1, 2, 3, 4, 5]\n        console.log(\n            arr,\n            [...arr].sort((a, b) => Math.random() < .5 ? -1 : 1),\n            arr.filter(_ => Math.random() < .5)\n        )\n\n    }\n\n    {\n        const p = new Promise(resolve => {\n            setTimeout(() => { resolve(\"777\") }, 2000)\n        })\n        console.log('Promise created')\n        const p2 = p.then(data => console.log('Promise resolved: ' + data))\n        p2.then(data => console.log('data: ' + data))\n        console.log('After \"then\"')\n    }\n\n    {\n        console.log(Array.from(new Set([1, 4, 3, 1, 1, 2, 7, 5, 1, 3])).sort())\n        const set = new Set([1, 4, 3, 1, 1, 2, 7, 5, 1, 3])\n        console.log(set)\n        // console.log([...set])\n        console.log([[1, 2, 5], [3, 4]].flat())\n    }\n}\n"],"names":["useState","o","console","log","a","toPrecision","b","toUpperCase","f","length","fn","x","arr","sort","Math","random","filter","_","p","Promise","resolve","setTimeout","then","data","Array","from","Set","set","flat","f7","className","styles","style","whiteSpace"],"sourceRoot":""}