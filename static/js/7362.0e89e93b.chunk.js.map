{"version":3,"file":"static/js/7362.0e89e93b.chunk.js","mappings":"kKACA,EAA4B,2BAA5B,EAAiE,yB,SC8CjE,EAtCwC,SAAC,GAAmC,IAAjCA,EAAgC,EAAhCA,SAAUC,EAAsB,EAAtBA,SAAUC,EAAY,EAAZA,MACrDC,GAAQC,EAAAA,EAAAA,UAAQ,WAClB,IAAMD,EAAa,GACnB,GAAIH,EACA,IACI,IAAMK,EAAIC,WAAWN,GACfO,EAAQP,EAASQ,QAAQ,eAAgB,IAC/CL,EAAM,cAAgBE,EAAIE,EAC1BJ,EAAM,UAAYE,EAAI,EAAIE,EAC1BE,QAAQC,IAAIP,GACd,MAAOQ,GACLF,QAAQC,IAAIC,GASpB,OANIV,IACAE,EAAM,eAAiBF,GAEvBC,IACAC,EAAM,WAAaD,GAEhBC,IACR,CAACH,EAAUC,EAAUC,IAExB,OADAO,QAAQC,IAAIP,IAER,gBAAKS,UAAWC,EAAkBV,MAAOA,EAAzC,UACI,iBAAKS,UAAWC,EAAhB,WACI,iBAAMV,MAAO,CAAE,QAAS,GAAxB,gBACA,iBAAMA,MAAO,CAAE,QAAS,GAAxB,gBACA,iBAAMA,MAAO,CAAE,QAAS,GAAxB,gBACA,iBAAMA,MAAO,CAAE,QAAS,GAAxB,gBACA,iBAAMA,MAAO,CAAE,QAAS,GAAxB,gBACA,iBAAMA,MAAO,CAAE,QAAS,GAAxB,gBACA,iBAAMA,MAAO,CAAE,QAAS,GAAxB,sB,8GCxChB,EAA4B,4BAA5B,EAA+D,uBAA/D,EAA8F,wB,SCyD9F,EApD2B,WACvB,OAA+CW,EAAAA,EAAAA,IAAiB,SAACC,GAAD,OAAWA,EAAMC,QAAzEC,EAAR,EAAQA,MAAON,EAAf,EAAeA,MAAOO,EAAtB,EAAsBA,QAASC,EAA/B,EAA+BA,KAAMC,EAArC,EAAqCA,MACrC,GAAqCC,EAAAA,EAAAA,KAA7BC,EAAR,EAAQA,WAAYC,EAApB,EAAoBA,aAMpB,OAJAC,EAAAA,EAAAA,YAAU,WACNF,EAAWH,EAAMC,KAClB,CAACD,IAEAD,GACO,gBAAKf,MAAO,CACfsB,QAAS,OACTC,eAAgB,SAChBC,WAAY,SACZC,OAAQ,OACRC,SAAU,WACVC,IAAK,GACLC,MAAO,EACPC,OAAQ,EACRC,KAAM,GATH,UAWH,SAACC,EAAA,EAAD,CAAShC,MAAM,cAGnBS,GACO,wBAAKA,KAGZ,iBAAKC,UAAWC,EAAhB,UACKI,EAAMkB,KAAI,SAACnB,GAAD,OACP,iBAAmBJ,UAAWC,EAA9B,WACI,4BAAOG,EAAKoB,GAAZ,OADJ,IAC6BpB,EAAKqB,QADxBrB,EAAKoB,QAInB,gBAAKxB,UAAWC,EAAhB,SA9BM,CAAC,EAAG,EAAG,EAAG,EAAG,GA+BRsB,KAAI,SAACG,GAAD,OACP,gBAEIC,QAAS,kBAAMhB,EAAae,IAC5BnC,MAAO,CACHqC,OAAQF,IAAMnB,EACR,gBACA,uBANd,SASKmB,GARIA,a,qSCtChBG,EAAa,WACtB,0CAAO,WAAOC,GAAP,uFAECA,EAAS,CAAEC,KAAMC,EAAAA,EAAAA,cAFlB,SAGwBC,GAAAA,CACnB,8CAJL,OAGOC,EAHP,OAMCC,YAAW,WACPL,EAAS,CACLC,KAAMC,EAAAA,EAAAA,oBACNI,QAASF,EAASG,SAEvB,KAXJ,gDAaCP,EAAS,CACLC,KAAMC,EAAAA,EAAAA,kBACNI,QAAQ,0BAAD,eAfZ,yDAAP,uD,UCDS1B,EAAa,WAA2B,IAA1BH,EAAyB,uDAAlB,EAAGC,EAAe,uDAAP,GAC3C,0CAAO,WAAOsB,GAAP,uFAEHA,EAAS,CAAEC,KAAMO,EAAAA,EAAAA,cAFd,SAGoBL,GAAAA,CACrB,6CACA,CACEM,OAAQ,CAAEC,MAAOjC,EAAMkC,OAAQjC,KANhC,OAGG0B,EAHH,OASHC,YAAW,WACTL,EAAS,CACPC,KAAMO,EAAAA,EAAAA,oBACNF,QAASF,EAASG,SAEnB,KAdA,gDAgBHP,EAAS,CACPC,KAAMO,EAAAA,EAAAA,kBACNF,QAAS,iCAlBR,yDAAP,uDAwBK,SAASzB,EAAaJ,GAC3B,MAAO,CAAEwB,KAAMO,EAAAA,EAAAA,SAAyBF,QAAS7B,GC3BnD,OAAe,kBACRmC,GACAC,GCDMlC,EAAa,WACtB,IAAMqB,GAAWc,EAAAA,EAAAA,MACjB,OAAOC,EAAAA,EAAAA,IAAmBC,EAAgBhB,K,yDCHjC5B,E,QAAoD6C,I,qBCY1D,IAAKT,E,gCAAZ,SAAYA,GAAAA,EAAAA,YAAAA,cAAAA,EAAAA,oBAAAA,sBAAAA,EAAAA,kBAAAA,oBAAAA,EAAAA,SAAAA,WAAZ,CAAYA,IAAAA,EAAAA,M,qBCTL,IAAKN,E,gCAAZ,SAAYA,GAAAA,EAAAA,YAAAA,cAAAA,EAAAA,oBAAAA,sBAAAA,EAAAA,kBAAAA,oBAAZ,CAAYA,IAAAA,EAAAA","sources":["webpack://gh-react-site/./src/components/UI/Spinner/Spinner.module.scss?44c8","components/UI/Spinner/Spinner.tsx","webpack://gh-react-site/./src/pages/react/ReduxThunk/components/TodoList.module.scss?6aca","pages/react/ReduxThunk/components/TodoList.tsx","pages/react/ReduxThunk/store/action-creators/user.ts","pages/react/ReduxThunk/store/action-creators/todo.ts","pages/react/ReduxThunk/store/action-creators/index.ts","pages/react/ReduxThunk/hooks/useActions.ts","pages/react/ReduxThunk/hooks/useTypedSelector.ts","pages/react/ReduxThunk/types/todo.ts","pages/react/ReduxThunk/types/user.ts"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Spinner_container__-7epn\",\"spinner\":\"Spinner_spinner__rf06H\",\"rotate\":\"Spinner_rotate__Lq73P\"};","import React, { useMemo } from 'react';\nimport styles from './Spinner.module.scss'\n\ninterface SpinnerProps {\n    diameter?: string\n    fontSize?: string\n    color?: string\n}\n\nconst Spinner: React.FC<SpinnerProps> = ({ diameter, fontSize, color }) => {\n    const style = useMemo(() => {\n        const style: any = {}\n        if (diameter) {\n            try {\n                const d = parseFloat(diameter)\n                const units = diameter.replace(/([0-9.]|\\s)/g, '')\n                style[\"--diameter\"] = d + units\n                style[\"--left\"] = d / 2 + units\n                console.log(style)\n            } catch (error) {\n                console.log(error)\n            }\n        }\n        if (fontSize) {\n            style[\"--font-size\"] = fontSize\n        }\n        if (color) {\n            style[\"--color\"] = color\n        }\n        return style as React.CSSProperties\n    }, [diameter, fontSize, color])\n    console.log(style)\n    return (\n        <div className={styles.container} style={style}>\n            <div className={styles.spinner}>\n                <span style={{ \"--idx\": 0 } as React.CSSProperties}>L</span>\n                <span style={{ \"--idx\": 1 } as React.CSSProperties}>O</span>\n                <span style={{ \"--idx\": 2 } as React.CSSProperties}>A</span>\n                <span style={{ \"--idx\": 3 } as React.CSSProperties}>D</span>\n                <span style={{ \"--idx\": 4 } as React.CSSProperties}>I</span>\n                <span style={{ \"--idx\": 5 } as React.CSSProperties}>N</span>\n                <span style={{ \"--idx\": 6 } as React.CSSProperties}>G</span>\n            </div>\n        </div >\n    );\n}\n\nexport default Spinner;\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"TodoList_container__5uyOR\",\"todo\":\"TodoList_todo__MBhHy\",\"pager\":\"TodoList_pager__jUnCl\"};","import React, { useEffect, useReducer } from 'react';\nimport Spinner from '../../../../components/UI/Spinner/Spinner';\nimport { useActions } from '../hooks/useActions';\nimport { useTypedSelector } from '../hooks/useTypedSelector';\nimport styles from './TodoList.module.scss'\n\nconst TodoList: React.FC = () => {\n    const { todos, error, loading, page, limit } = useTypedSelector((state) => state.todo)\n    const { fetchTodos, setTodosPage } = useActions()\n    const pages = [1, 2, 3, 4, 5]\n    useEffect(() => {\n        fetchTodos(page, limit)\n    }, [page]);\n\n    if (loading) {\n        return <div style={{\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n            height: '100%',\n            position: 'absolute',\n            top: 24,\n            right: 0,\n            bottom: 0,\n            left: 0\n        }}>\n            <Spinner color=\"#8b854a\" />\n        </div>\n    }\n    if (error) {\n        return <h1>{error}</h1>\n    }\n    return (\n        <div className={styles.container}>\n            {todos.map((todo) => (\n                <div key={todo.id} className={styles.todo}>\n                    <span>{todo.id}.</span> {todo.title}\n                </div>\n            ))}\n            <div className={styles.pager} >\n                {pages.map((p) => (\n                    <div\n                        key={p}\n                        onClick={() => setTodosPage(p)}\n                        style={{\n                            border: p === page\n                                ? \"1px solid red\"\n                                : \"1px solid lightgrey\",\n                        }}\n                    >\n                        {p}\n                    </div>\n                ))}\n            </div>\n        </div>\n    );\n}\n\nexport default TodoList;\n","import axios from \"axios\"\nimport { Dispatch } from \"react\"\nimport { UserAction, UserActionType } from \"../../types/user\"\n\nexport const fetchUsers = () => {\n    return async (dispatch: Dispatch<UserAction>) => {\n        try {\n            dispatch({ type: UserActionType.FETCH_USERS })\n            const response = await axios(\n                \"https://jsonplaceholder.typicode.com/users\"\n            )\n            setTimeout(() => {\n                dispatch({\n                    type: UserActionType.FETCH_USERS_SUCCESS,\n                    payload: response.data\n                })\n            }, 3000)\n        } catch (e) {\n            dispatch({\n                type: UserActionType.FETCH_USERS_ERROR,\n                payload: `Error loading users:\\n ${e}`// + (e.message?.toString() || \"\")\n            })\n        }\n    }\n}","import axios from \"axios\";\nimport { Dispatch } from \"react\";\nimport { TodoAction, TodoActionType } from \"../../types/todo\";\n\nexport const fetchTodos = (page = 1, limit = 10) => {\n  return async (dispatch: Dispatch<TodoAction>) => {\n    try {\n      dispatch({ type: TodoActionType.FETCH_TODOS });\n      const response = await axios(\n        \"https://jsonplaceholder.typicode.com/todos\",\n        {\n          params: { _page: page, _limit: limit },\n        }\n      );\n      setTimeout(() => {\n        dispatch({\n          type: TodoActionType.FETCH_TODOS_SUCCESS,\n          payload: response.data,\n        });\n      }, 500);\n    } catch (e) {\n      dispatch({\n        type: TodoActionType.FETCH_TODOS_ERROR,\n        payload: \"ERROR while loading todos:\\n\",\n      });\n    }\n  };\n};\n\nexport function setTodosPage(page: number): TodoAction {\n  return { type: TodoActionType.SET_PAGE, payload: page };\n}\n","import * as UserActionCreators from \"./user\"\nimport * as TodoActionCreators from \"./todo\"\n\nexport default {\n    ...UserActionCreators,\n    ...TodoActionCreators,\n}","import { useDispatch } from \"react-redux\"\nimport { bindActionCreators } from \"redux\"\nimport ActionCreators from \"../store/action-creators/index\"\n\nexport const useActions = () => {\n    const dispatch = useDispatch()\n    return bindActionCreators(ActionCreators, dispatch)\n}\n\n","import { TypedUseSelectorHook, useSelector } from \"react-redux\"\nimport { RootState } from \"../store/reducers\"\n\nexport const useTypedSelector: TypedUseSelectorHook<RootState> = useSelector","type Todo = {\n    \"userId\": number,\n    \"id\": number,\n    \"title\": string,\n    \"completed\": boolean,\n}\n\nexport interface TodoState {\n    todos: Todo[]\n    loading: boolean\n    error: string | null\n    page: number\n    limit: number\n}\n\nexport enum TodoActionType {\n    FETCH_TODOS = \"FETCH_TODOS\",\n    FETCH_TODOS_SUCCESS = \"FETCH_TODOS_SUCCESS\",\n    FETCH_TODOS_ERROR = \"FETCH_TODOS_ERROR\",\n    SET_PAGE = \"SET_PAGE\",\n}\n\ninterface FetchTodosAction {\n    type: TodoActionType.FETCH_TODOS\n}\n\ninterface FetchTodosErrorAction {\n    type: TodoActionType.FETCH_TODOS_ERROR\n    payload: string\n}\n\ninterface FetchTodosSuccessAction {\n    type: TodoActionType.FETCH_TODOS_SUCCESS\n    payload: Todo[]\n}\n\ninterface SetPageAction {\n    type: TodoActionType.SET_PAGE\n    payload: number\n}\n\nexport type TodoAction =\n    | FetchTodosAction\n    | FetchTodosSuccessAction\n    | FetchTodosErrorAction\n    | SetPageAction\n\n","export interface UserState {\n    users: any[]\n    loading: boolean\n    error: string | null\n}\n\nexport enum UserActionType{\n    FETCH_USERS = \"FETCH_USERS\",\n    FETCH_USERS_SUCCESS = \"FETCH_USERS_SUCCESS\",\n    FETCH_USERS_ERROR = \"FETCH_USERS_ERROR\",\n}\n\ninterface FetchUsersAction {\n    type: UserActionType.FETCH_USERS\n}\n\ninterface FetchUsersSuccessAction {\n    type: UserActionType.FETCH_USERS_SUCCESS\n    payload: any[]\n}\n\ninterface FetchUsersErrorAction {\n    type: UserActionType.FETCH_USERS_ERROR\n    payload: string | null\n}\n\nexport type UserAction =\n    | FetchUsersAction\n    | FetchUsersSuccessAction\n    | FetchUsersErrorAction"],"names":["diameter","fontSize","color","style","useMemo","d","parseFloat","units","replace","console","log","error","className","styles","useTypedSelector","state","todo","todos","loading","page","limit","useActions","fetchTodos","setTodosPage","useEffect","display","justifyContent","alignItems","height","position","top","right","bottom","left","Spinner","map","id","title","p","onClick","border","fetchUsers","dispatch","type","UserActionType","axios","response","setTimeout","payload","data","TodoActionType","params","_page","_limit","UserActionCreators","TodoActionCreators","useDispatch","bindActionCreators","ActionCreators","useSelector"],"sourceRoot":""}