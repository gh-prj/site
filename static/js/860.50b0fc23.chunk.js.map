{"version":3,"file":"static/js/860.50b0fc23.chunk.js","mappings":"8LACA,EAA0B,yB,SCW1B,EATgB,WACZ,OACI,iBAAKA,UAAWC,EAAhB,WACI,SAACC,EAAD,KACA,SAACC,EAAD,QAONC,EAAO,SAACC,GACV,IAAK,IAAIC,EAAI,EAAGA,EAAI,IAAYA,IAC5BD,IAEJ,OAAOA,GAGX,SAASH,IACL,OAA4BK,EAAAA,EAAAA,WAAS,GAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAA0BF,EAAAA,EAAAA,UAAmB,IAA7C,eAAOG,EAAP,KAAcC,EAAd,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,GAAnC,eAAOK,EAAP,KAAcC,EAAd,KACMC,EAASN,GAAUJ,EAAKQ,IAAU,IAQxC,OAHAG,EAAAA,EAAAA,YAAU,WACNN,GAAU,KACX,KAEC,4BACI,4BACI,mBACA,mBAAQO,QAVJ,WACZL,EAAS,GAAD,eAAKD,GAAL,gBAAoBA,EAAMO,OAAS,OASnC,uBACA,wBACKP,EAAMQ,KAAI,SAACC,EAAMC,GAAP,OAAe,wBAAeD,GAANC,YAG3C,qCACYR,GAAM,mBACd,mBAAQI,QAAS,kBAAMH,EAASD,EAAQ,IAAxC,qBAA2D,kBAC1DE,QAMjB,SAASX,IACL,OAA4BI,EAAAA,EAAAA,WAAS,GAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAA0BF,EAAAA,EAAAA,UAAmB,IAA7C,eAAOG,EAAP,KAAcC,EAAd,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,GAAnC,eAAOK,EAAP,KAAcC,EAAd,KACMC,GAASO,EAAAA,EAAAA,UAAQ,kBAAMb,GAAUJ,EAAKQ,IAAU,MAAY,CAACA,IAQnE,OAHAG,EAAAA,EAAAA,YAAU,WACNN,GAAU,KACX,KAEC,4BACI,4BACI,mBACA,mBAAQO,QAVJ,WACZL,EAAS,GAAD,eAAKD,GAAL,gBAAoBA,EAAMO,OAAS,OASnC,uBACA,wBACKP,EAAMQ,KAAI,SAACC,EAAMC,GAAP,OAAe,wBAAeD,GAANC,YAG3C,qCACYR,GAAM,mBACd,mBAAQI,QAAS,kBAAMH,EAASD,EAAQ,IAAxC,qBAA2D,kBAC1DE,U,8ECvEF,SAASQ,EAAmBC,GACzC,OCJa,SAA4BA,GACzC,GAAIC,MAAMC,QAAQF,GAAM,OAAO,EAAAG,EAAA,GAAiBH,GDGzC,CAAkBA,IELZ,SAA0BI,GACvC,GAAsB,qBAAXC,QAAmD,MAAzBD,EAAKC,OAAOC,WAA2C,MAAtBF,EAAK,cAAuB,OAAOH,MAAMM,KAAKH,GFInF,CAAgBJ,KAAQ,EAAAQ,EAAA,GAA2BR,IGLvE,WACb,MAAM,IAAIS,UAAU,wIHIwE","sources":["webpack://gh-react-site/./src/pages/react/hooks/useMemo/UseMemo.module.scss?8df3","pages/react/hooks/useMemo/UseMemo.tsx","../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"content\":\"UseMemo_content__v8E4F\"};","import React, { useEffect, useMemo, useState } from 'react';\nimport styles from './UseMemo.module.scss'\n\nconst UseMemo = () => {\n    return (\n        <div className={styles.content}>\n            <WithoutUseMemo />\n            <WithUseMemo />\n        </div>\n    );\n}\n\nexport default UseMemo;\n\nconst calc = (n: number) => {\n    for (let i = 0; i < 1000000000; i++) {\n        n++\n    }\n    return n\n}\n\nfunction WithoutUseMemo() {\n    const [loaded, setLoaded] = useState(false);\n    const [items, setItems] = useState<string[]>([]);\n    const [count, setCount] = useState(0);\n    const result = loaded && calc(count) || 1000000000\n\n    const addItem = () => {\n        setItems([...items, `Item ${items.length + 1}`])\n    }\n    useEffect(() => {\n        setLoaded(true)\n    }, []);\n    return (\n        <div>\n            <div>\n                <br />\n                <button onClick={addItem}>Add Item</button>\n                <ul>\n                    {items.map((item, idx) => <li key={idx}>{item}</li>)}\n                </ul>\n            </div>\n            <div>\n                Count: {count}<br />\n                <button onClick={() => setCount(count + 1)}>  +1  </button><br />\n                {result}\n            </div>\n        </div>\n    )\n}\n\nfunction WithUseMemo() {\n    const [loaded, setLoaded] = useState(false);\n    const [items, setItems] = useState<string[]>([]);\n    const [count, setCount] = useState(0);\n    const result = useMemo(() => loaded && calc(count) || 1000000000, [count])\n\n    const addItem = () => {\n        setItems([...items, `Item ${items.length + 1}`])\n    }\n    useEffect(() => {\n        setLoaded(true)\n    }, []);\n    return (\n        <div>\n            <div>\n                <br />\n                <button onClick={addItem}>Add Item</button>\n                <ul>\n                    {items.map((item, idx) => <li key={idx}>{item}</li>)}\n                </ul>\n            </div>\n            <div>\n                Count: {count}<br />\n                <button onClick={() => setCount(count + 1)}>  +1  </button><br />\n                {result}\n            </div>\n        </div>\n    )\n}","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}"],"names":["className","styles","WithoutUseMemo","WithUseMemo","calc","n","i","useState","loaded","setLoaded","items","setItems","count","setCount","result","useEffect","onClick","length","map","item","idx","useMemo","_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","from","unsupportedIterableToArray","TypeError"],"sourceRoot":""}