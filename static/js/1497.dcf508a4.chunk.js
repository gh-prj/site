"use strict";(self.webpackChunkgh_react_site=self.webpackChunkgh_react_site||[]).push([[1497],{1497:function(n,t,e){e.r(t);var r=e(885),o=e(1413),c=e(5987),l=e(2791),i=e(184),s=["primary","onClick","children","style"],a=function(n){var t=n.primary,e=n.onClick,r=n.children,l=n.style,a=(0,c.Z)(n,s);return(0,i.jsxs)("button",(0,o.Z)((0,o.Z)({},a),{},{style:(0,o.Z)((0,o.Z)({},l||{}),{},{color:t?"red":"black"}),onClick:e,children:[" ",r," "]}))};t.default=function(){var n=(0,l.useState)(0),t=(0,r.Z)(n,2),e=t[0],o=t[1];return(0,i.jsxs)("div",{children:[(0,i.jsx)(a,{primary:!0,onClick:function(){o((function(n){return n+1}))},children:"Button1"}),(0,i.jsxs)("span",{children:[" ",e," "]}),(0,i.jsx)(a,{style:{background:"aqua"},children:"Button2"}),(0,i.jsx)("pre",{children:(0,i.jsx)("code",{children:'import React, { useState } from \'react\';\n\ninterface Props extends React.ComponentProps<"button"> {\n    primary?: boolean;\n    onClick?: () => void;\n}\n\nconst MyButton: React.FC<Props> = ({\n    primary, onClick, children, style, ...props\n}) => {\n    return (\n        <button\n            {...props}\n            style={{ ...style || {}, color: primary ? "red" : "black" }}\n            onClick={onClick}\n        > {children} </button>\n    );\n};\n\nconst App = () => {\n    const [value, setValue] = useState(0);\n    const handleClick = () => {\n        setValue(v => v + 1)\n    }\n    return (\n        <div>\n            <MyButton primary onClick={handleClick}>Button1</MyButton>\n            <span> {value} </span>\n            <MyButton style={{ background: "aqua" }}>Button2</MyButton>\n        </div>\n    );\n}\n'})})]})}}}]);
//# sourceMappingURL=1497.dcf508a4.chunk.js.map