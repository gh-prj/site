{"version":3,"file":"static/js/1497.dcf508a4.chunk.js","mappings":"0NAMMA,EAA4B,SAAC,GAE5B,IADHC,EACE,EADFA,QAASC,EACP,EADOA,QAASC,EAChB,EADgBA,SAAUC,EAC1B,EAD0BA,MAAUC,GACpC,YACF,OACI,sCACQA,GADR,IAEID,OAAK,kBAAOA,GAAS,IAAhB,IAAoBE,MAAOL,EAAU,MAAQ,UAClDC,QAASA,EAHb,cAIGC,EAJH,SA0DR,UAlDc,WACV,OAA0BI,EAAAA,EAAAA,UAAS,GAAnC,eAAOC,EAAP,KAAcC,EAAd,KAIA,OACI,4BACI,SAACT,EAAD,CAAUC,SAAO,EAACC,QALN,WAChBO,GAAS,SAAAC,GAAC,OAAIA,EAAI,MAId,sBACA,gCAAQF,EAAR,QACA,SAACR,EAAD,CAAUI,MAAO,CAAEO,WAAY,QAA/B,sBACA,0BAAK","sources":["pages/react/TypeScript/Props.tsx"],"sourcesContent":["import React, { useState } from 'react';\n// interface Props extends React.ComponentProps<\"button\"> {\ninterface Props extends React.ComponentPropsWithoutRef<\"button\"> {\n    primary?: boolean;\n    onClick?: () => void;\n}\nconst MyButton: React.FC<Props> = ({\n    primary, onClick, children, style, ...props\n}) => {\n    return (\n        <button\n            {...props}\n            style={{ ...style || {}, color: primary ? \"red\" : \"black\" }}\n            onClick={onClick}\n        > {children} </button>\n    );\n};\n\nconst Props = () => {\n    const [value, setValue] = useState(0);\n    const handleClick = () => {\n        setValue(v => v + 1)\n    }\n    return (\n        <div>\n            <MyButton primary onClick={handleClick}>Button1</MyButton>\n            <span> {value} </span>\n            <MyButton style={{ background: \"aqua\" }}>Button2</MyButton>\n            <pre><code>\n                {\n                    `import React, { useState } from 'react';\n\ninterface Props extends React.ComponentProps<\"button\"> {\n    primary?: boolean;\n    onClick?: () => void;\n}\n\nconst MyButton: React.FC<Props> = ({\n    primary, onClick, children, style, ...props\n}) => {\n    return (\n        <button\n            {...props}\n            style={{ ...style || {}, color: primary ? \"red\" : \"black\" }}\n            onClick={onClick}\n        > {children} </button>\n    );\n};\n\nconst App = () => {\n    const [value, setValue] = useState(0);\n    const handleClick = () => {\n        setValue(v => v + 1)\n    }\n    return (\n        <div>\n            <MyButton primary onClick={handleClick}>Button1</MyButton>\n            <span> {value} </span>\n            <MyButton style={{ background: \"aqua\" }}>Button2</MyButton>\n        </div>\n    );\n}\n`}\n            </code></pre>\n        </div>\n    );\n}\n\nexport default Props;\n"],"names":["MyButton","primary","onClick","children","style","props","color","useState","value","setValue","v","background"],"sourceRoot":""}