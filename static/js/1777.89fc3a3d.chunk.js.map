{"version":3,"file":"static/js/1777.89fc3a3d.chunk.js","mappings":"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","sources":["webpack://gh-react-site/./src/pages/react/MobX/McDondals/McDondals.module.scss?6e48","pages/react/MobX/McDondals/common.ts","pages/react/MobX/McDondals/store/clientStore.ts","pages/react/MobX/McDondals/store/dondalsStore.ts","pages/react/MobX/McDondals/store/exchangeStore.ts","pages/react/MobX/McDondals/store/orderStore.ts","pages/react/MobX/McDondals/store/storage.ts","pages/react/MobX/McDondals/store/uiStore.ts","pages/react/MobX/McDondals/store/rootStore.ts","pages/react/MobX/McDondals/RootStoreContext.tsx","webpack://gh-react-site/./src/pages/react/MobX/McDondals/components/Dondal/AddNewDondalView/AddNewDondalView.module.scss?88f8","pages/react/MobX/McDondals/components/Dondal/AddNewDondalView/AddNewDondalView.tsx","webpack://gh-react-site/./src/pages/react/MobX/McDondals/components/Dondal/DondalView/DondalView.module.scss?f82f","webpack://gh-react-site/./src/pages/react/MobX/McDondals/components/Dondal/Logo/Logo.module.scss?355c","pages/react/MobX/McDondals/components/Dondal/Logo/Logo.tsx","webpack://gh-react-site/./src/pages/react/MobX/McDondals/components/Dondal/MenuItemView/MenuItemView.module.scss?8533","pages/react/MobX/McDondals/components/Dondal/MenuItemView/MenuItemView.tsx","webpack://gh-react-site/./src/pages/react/MobX/McDondals/components/Dondal/MenuView/MenuView.module.scss?647f","webpack://gh-react-site/./src/pages/react/MobX/McDondals/components/Dondal/AddMenuItemView/AddMenuItemView.module.scss?0f83","pages/react/MobX/McDondals/components/Dondal/AddMenuItemView/AddMenuItemView.tsx","pages/react/MobX/McDondals/components/Dondal/MenuView/MenuView.tsx","pages/react/MobX/McDondals/components/Dondal/DondalView/DondalView.tsx","webpack://gh-react-site/./src/pages/react/MobX/McDondals/components/Dondal/DondalsMainView/DondalsMainView.module.scss?8730","pages/react/MobX/McDondals/components/Dondal/DondalsMainView/DondalsMainView.tsx","webpack://gh-react-site/./src/pages/react/MobX/McDondals/components/Order/CreateNewOrderView/CreateNewOrderView.module.scss?7686","pages/react/MobX/McDondals/components/Order/CreateNewOrderView/CreateNewOrderView.tsx","webpack://gh-react-site/./src/pages/react/MobX/McDondals/components/Order/OrderListView/OrderListView.module.scss?bbc9","pages/react/MobX/McDondals/components/Order/OrderListView/OrderListView.tsx","webpack://gh-react-site/./src/pages/react/MobX/McDondals/components/Order/OrderItemView/OrderItemView.module.scss?822a","pages/react/MobX/McDondals/components/Order/OrderItemView/OrderItemView.tsx","webpack://gh-react-site/./src/pages/react/MobX/McDondals/components/Order/OrderView/OrderView.module.scss?be4b","pages/react/MobX/McDondals/components/Order/OrderView/OrderView.tsx","webpack://gh-react-site/./src/pages/react/MobX/McDondals/components/UI/IconButton/IconButton.module.scss?8c99","pages/react/MobX/McDondals/components/UI/IconButton/IconButton.tsx","pages/react/MobX/McDondals/components/UI/SelectCountry/SelectCountry.module.scss","pages/react/MobX/McDondals/components/UI/SelectCountry/SelectCountry.tsx","webpack://gh-react-site/./src/pages/react/MobX/McDondals/components/Client/AddNewClientView/AddNewClientView.module.scss?5e66","pages/react/MobX/McDondals/components/Client/AddNewClientView/AddNewClientView.tsx","webpack://gh-react-site/./src/pages/react/MobX/McDondals/components/Client/PurchasesByCountry/PurchasesByCountry.module.scss?b49e","pages/react/MobX/McDondals/components/Client/PurchasesByCountry/PurchasesByCountry.tsx","webpack://gh-react-site/./src/pages/react/MobX/McDondals/components/Client/ClientsMainView/ClientsMainView.module.scss?c530","pages/react/MobX/McDondals/components/Client/ClientsMainView/ClientsMainView.tsx","webpack://gh-react-site/./src/pages/react/MobX/McDondals/components/Exchange/RateView/RateView.module.scss?93b9","pages/react/MobX/McDondals/components/Exchange/RateView/RateView.tsx","webpack://gh-react-site/./src/pages/react/MobX/McDondals/components/Exchange/ExchangeView/ExchangeView.module.scss?68f8","pages/react/MobX/McDondals/components/Exchange/ExchangeView/ExchangeView.tsx","webpack://gh-react-site/./src/pages/react/MobX/McDondals/components/Exchange/ExchangeMainView/ExchangeMainView.module.scss?75ae","pages/react/MobX/McDondals/components/Exchange/ExchangeMainView/ExchangeMainView.tsx","pages/react/MobX/McDondals/McDondals.tsx","pages/react/MobX/McDondals/McDondalsWrapped.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"McDondals_container__yZTEe\",\"logo\":\"McDondals_logo__KvjjF\"};","export type CountryCode =\n    | 'RU'\n    | 'US'\n    | 'EU'\n    | 'GB'\n    | 'JP'\n    | 'TH'\n    | 'IN'\n\nexport type CurrencyCode =\n    | 'RUB'\n    | 'USD'\n    | 'EUR'\n    | 'GBP'\n    | 'JPY'\n    | 'THB'\n    | 'INR'\n\nexport interface Settings {\n    currencyCode: CurrencyCode\n    currencyName: string\n    currencyMin: number\n    locale: string\n    country: string\n}\n\nexport const RegionalSettings: { [key in CountryCode]: Settings } = {\n    'RU': { currencyCode: 'RUB', currencyName: 'Russian Ruble', currencyMin: 0.01, locale: 'ru-RU', country: 'Russia' },\n    'US': { currencyCode: 'USD', currencyName: 'US Dollar', currencyMin: 0.01, locale: 'en-US', country: 'United States' },\n    'EU': { currencyCode: 'EUR', currencyName: 'Euro', currencyMin: 0.01, locale: 'de-DE', country: 'European Union' },\n    'GB': { currencyCode: 'GBP', currencyName: 'British Pound', currencyMin: 0.01, locale: 'en-GB', country: 'United Kingdom' },\n    'JP': { currencyCode: 'JPY', currencyName: 'Japanese Yen', currencyMin: 1, locale: 'ja-JP', country: 'Japan' },\n    'TH': { currencyCode: 'THB', currencyName: 'Thailand Baht', currencyMin: 0.01, locale: 'th-TH', country: 'Thailand' },\n    'IN': { currencyCode: 'INR', currencyName: 'India Rupee', currencyMin: 0.01, locale: 'hi-IN', country: 'India' },\n}\n\nexport const CurrencyCountry: { [key in CurrencyCode]: CountryCode } = {\n    'RUB': 'RU',\n    'USD': 'US',\n    'EUR': 'EU',\n    'GBP': 'GB',\n    'JPY': 'JP',\n    'THB': 'TH',\n    'INR': 'IN',\n}\n\nexport const currencyFormatter = (currencyCode: CurrencyCode) => {\n    const settings = Object.entries(RegionalSettings)\n        .map(entry => entry[1])\n        .find(settings => settings.currencyCode === currencyCode)!\n    return new Intl.NumberFormat(settings.locale, {\n        style: 'currency', currency: settings.currencyCode\n    })\n}\n","import { action, autorun, comparer, makeObservable, observable, reaction, toJS } from \"mobx\"\nimport { RootStore } from \"./rootStore\"\nimport { v4 as uuidv4 } from 'uuid'\nimport IStorage from \"./storage\"\nimport { CountryCode, CurrencyCode, RegionalSettings } from \"../common\"\n\nclass ClientDto {\n    id: number\n    name: string\n    countryCode: CountryCode\n    balance: number\n    currencyCode: CurrencyCode\n    constructor(\n        id: number,\n        name: string,\n        countryCode: CountryCode,\n        balance: number,\n        currencyCode: CurrencyCode\n    ) {\n        this.id = id\n        this.name = name\n        this.countryCode = countryCode\n        this.balance = balance\n        this.currencyCode = currencyCode\n    }\n}\n\nexport class Client extends ClientDto {\n    constructor(\n        id: number,\n        name: string,\n        countryCode: CountryCode,\n        balance: number,\n        currencyCode: CurrencyCode\n    ) {\n        super(id, name, countryCode, balance, currencyCode)\n        makeObservable(this, {\n            balance: observable\n        })\n    }\n}\n\nconst initialClients: ClientDto[] = [\n    {\n        id: 1,\n        name: 'John Smith',\n        countryCode: 'US',\n        balance: 993.95,\n        currencyCode: 'USD'\n    },\n    {\n        id: 2,\n        name: 'Luce Pierre',\n        countryCode: 'EU',\n        balance: 998.12,\n        currencyCode: 'EUR'\n    }\n]\n\nexport class ClientStore {\n    rootStore: RootStore\n    clients: Client[] = []\n    addClient: (name: string, countryCode: CountryCode, currencyCode: CurrencyCode) => number\n    reset: () => void\n    save: () => void\n    constructor(rootStore: RootStore, storage: IStorage) {\n        console.log('creating ClientStore...')\n        this.rootStore = rootStore\n        this.save = () => {\n            storage.save('mcd/clients', JSON.stringify(this.clients))\n            console.log(`saved ${this.clients.length} client(s)`)\n        }\n        const clientFromDto = (dto: ClientDto) => new Client(\n            dto.id, dto.name, dto.countryCode,\n            dto.balance, dto.currencyCode\n        )\n        this.reset = () => {\n            console.log('reset Clients')\n            this.clients = initialClients.map(clientFromDto)\n            this.rootStore.orderStore.reset()\n            this.rootStore.uiStore.selectedClientId = 1\n        }\n        this.addClient = (name: string, countryCode: CountryCode, currencyCode: CurrencyCode) => {\n            console.log('adding client...')\n            const client = new Client(\n                Math.max(...this.clients.map(client => client.id)) + 1,\n                name,\n                countryCode,\n                ['RU', 'US', 'EU', 'GB'].includes(countryCode) ? 1000 : 30000,\n                RegionalSettings[countryCode].currencyCode\n            )\n            this.clients.push(client)\n            return client.id\n        }\n        this.clients = JSON.parse(storage.load('mcd/clients') ?? '[]')\n        console.log(`loaded ${this.clients.length} client(s)`)\n        if (!this.clients.length) {\n            console.log('used initialClients')\n            this.clients = initialClients\n        }\n        makeObservable(this, {\n            rootStore: false,\n            clients: observable,\n            reset: action.bound,\n            addClient: action.bound\n        })\n    }\n}","import { action, makeObservable, observable, toJS } from \"mobx\"\nimport { CountryCode } from \"../common\"\nimport { RootStore } from \"./rootStore\"\nimport IStorage from \"./storage\"\n\nexport class MenuItem {\n    id: number\n    dondalId: number\n    name: string\n    price: number\n    constructor(\n        id: number,\n        dondalId: number,\n        name: string,\n        price: number,\n    ) {\n        this.id = id\n        this.dondalId = dondalId\n        this.name = name\n        this.price = price\n        makeObservable(this, {\n            name: observable,\n            price: observable\n        })\n    }\n}\n\nconst initialMenuItems: MenuItem[] = [\n    {\n        id: 1,\n        dondalId: 1,\n        name: \"Susi\",\n        price: 249\n    },\n    {\n        id: 2,\n        dondalId: 1,\n        name: \"Pusi\",\n        price: 349\n    },\n    {\n        id: 3,\n        dondalId: 1,\n        name: \"Susi-pusi\",\n        price: 499\n    },\n    {\n        id: 4,\n        dondalId: 2,\n        name: \"Pelmeni\",\n        price: 0.37\n    },\n    {\n        id: 5,\n        dondalId: 2,\n        name: \"Vodka\",\n        price: 3.62\n    },\n    {\n        id: 6,\n        dondalId: 2,\n        name: \"Caviar\",\n        price: 3.20\n    },\n    {\n        id: 7,\n        dondalId: 2,\n        name: \"Kvass\",\n        price: 0.06\n    },\n    {\n        id: 8,\n        dondalId: 2,\n        name: \"Bread\",\n        price: 0.02\n    },\n]\n\n\nexport class Dondal {\n    id: number\n    countryCode: CountryCode\n    name: string\n    terminated: boolean\n    balance = 0\n    constructor(id: number,\n        countryCode: CountryCode,\n        name: string,\n        terminated = false,\n        balance = 0\n    ) {\n        this.id = id\n        this.name = name\n        this.countryCode = countryCode\n        this.terminated = terminated\n        this.balance = balance\n        makeObservable(this, {\n            terminated: observable,\n            balance: observable\n        })\n        console.log(toJS(this))\n    }\n}\n\nconst initialDondals: Dondal[] = [\n    {\n        id: 1,\n        countryCode: \"JP\",\n        name: \"神風\",\n        terminated: false,\n        balance: 0\n    },\n    {\n        id: 2,\n        countryCode: 'RU',\n        name: 'Red Corner',\n        terminated: false,\n        balance: 0\n    },\n]\n\nexport class DondalsStore {\n    rootStore: RootStore\n    dondals: Dondal[] = []\n    menuItems: MenuItem[] = []\n    addRandomDondal: () => void\n    reset: () => void\n    save: () => void\n    addMenuItem: (dondalId: number, name: string, price: number) => MenuItem\n    constructor(rootStore: RootStore, storage: IStorage) {\n        console.log('creating DondalsStore...')\n        this.rootStore = rootStore\n        this.save = () => {\n            storage.save('mcd/dondals', JSON.stringify(this.dondals))\n            console.log(`saved ${this.dondals.length} dondal(s)`)\n            storage.save('mcd/menuItems', JSON.stringify(this.menuItems))\n            console.log(`saved ${this.menuItems.length} menuItem(s)`)\n        }\n        this.reset = () => {\n            console.log('reset')\n            this.dondals = initialDondals\n            this.menuItems = initialMenuItems\n        }\n        this.addRandomDondal = () => {\n            console.log('adding dondal...')\n            this.dondals.push({\n                id: Math.max(...this.dondals.map(dondal => dondal.id)) + 1,\n                countryCode: ['EU', 'GB', 'RU'][Math.floor(Math.random() * 3)] as CountryCode,\n                name: 'Dondal' + Date.now(),\n                terminated: false,\n                balance: 0\n            })\n        }\n        this.addMenuItem = (dondalId: number, name: string, price: number) => {\n            console.log('adding menuItem...')\n            const menuItem = new MenuItem(\n                Math.max(...this.menuItems.map(menuItem => menuItem.id)) + 1,\n                dondalId,\n                name,\n                price,\n            )\n            this.menuItems.push(menuItem)\n            return menuItem\n        }\n        this.dondals = JSON.parse(storage.load('mcd/dondals') ?? '[]')\n        console.log(`loaded ${this.dondals.length} dondal(s)`)\n        if (!this.dondals.length) {\n            console.log('used initialDondals')\n            this.dondals = initialDondals\n        }\n        this.menuItems = JSON.parse(storage.load('mcd/menuItems') ?? '[]')\n        console.log(`loaded ${this.menuItems.length} menuItem(s)`)\n        if (!this.menuItems.length) {\n            console.log('used initialMenuItems')\n            this.menuItems = initialMenuItems\n        }\n        makeObservable(this, {\n            rootStore: false,\n            dondals: observable,\n            menuItems: observable,\n            reset: action.bound,\n            addRandomDondal: action.bound,\n            addMenuItem: action.bound,\n            updateMenuItem: action.bound,\n            removeMenuItem: action.bound,\n            addDondal: action.bound,\n        })\n    }\n    updateMenuItem(id: number, name: string, price: number) {\n        const menuItem = this.menuItems.find(menuItem => menuItem.id === id)\n        if (menuItem) {\n            menuItem.name = name\n            menuItem.price = price\n        }\n        else {\n            throw new Error('Menu Item not found.')\n        }\n    }\n    removeMenuItem(id: number) {\n        console.log('removing menuItem...')\n        this.menuItems = this.menuItems.filter(menuItem => menuItem.id !== id)\n    }\n    addDondal(countryCode: CountryCode, name: string) {\n        console.log('adding dondal...')\n        const dondal = new Dondal(Math.max(...this.dondals.map(dondal => dondal.id)) + 1,\n            countryCode, name, false)\n        this.dondals.push(dondal)\n        return dondal\n    }\n    dispose() {\n        console.log('disposing DondalsStore...')\n    }\n}","import { Settings } from \"../common\"\nimport { action, autorun, computed, extendObservable, makeObservable, observable, reaction, runInAction, toJS } from \"mobx\"\nimport { CountryCode, CurrencyCode, RegionalSettings } from \"../common\"\nimport { RootStore } from \"./rootStore\"\nimport IStorage from \"./storage\"\n\ninterface Range {\n    from: number\n    to: number\n}\n\ntype Trend = 'up' | 'down' | 'same'\n\nexport class Rate {\n    currencyCode: CurrencyCode\n    currencyName: string\n    countryCode: CountryCode\n    valueStr = '0'\n    trend: Trend = 'same'\n    dispose: () => void\n    constructor(currencyCode: CurrencyCode, range: Range) {\n        this.currencyCode = currencyCode\n        this.countryCode = Object.entries(RegionalSettings).find(entry => entry[1].currencyCode === currencyCode)![0] as CountryCode\n        this.currencyName = RegionalSettings[this.countryCode].currencyName\n        let isDisposing = false\n        this.dispose = () => {\n            // console.log('disposing ', this.currencyCode)\n            isDisposing = true\n        }\n        makeObservable(this, {\n            currencyCode: false,\n            currencyName: false,\n            countryCode: false,\n            valueStr: observable,\n            trend: observable,\n            value: computed,\n            dispose: false,\n        })\n        const getRate = () => {\n            const rate = range.from + Math.random() * (range.to - range.from)\n            let dotIdx = rate.toString().indexOf('.')\n            if (dotIdx === -1) dotIdx = rate.toString().length\n            const i = 5 - dotIdx + (rate < 1 ? 1 : 0)\n            return rate.toFixed(i)\n        }\n        const setNextTick = () => {\n            setTimeout(() => {\n                const rateStr = getRate()\n                const rate = parseFloat(rateStr)\n                runInAction(() => {\n                    this.value === 0\n                        || rate > this.value && (this.trend = 'up')\n                        || rate < this.value && (this.trend = 'down')\n                        || (this.trend = 'same')\n                    this.valueStr = rateStr\n                })\n                // console.log(new Date().toLocaleTimeString(), this.currencyCode, this.valueStr, this.trend)\n            }, this.value === 0 ? 100 : Math.random() * 4000 + 2000)\n        }\n        reaction(\n            () => this.value,\n            () => {\n                setNextTick()\n            },\n            {\n                fireImmediately: true,\n                scheduler: fn => {\n                    !isDisposing && fn()\n                }\n            }\n        )\n        // console.log('created ', this.currencyCode)\n    }\n    get value() {\n        return parseFloat(this.valueStr)\n    }\n}\n\ninterface CurrencyParams {\n    currencyCode: CurrencyCode\n    range: Range\n}\n\ntype Rates = Partial<{ [key in CurrencyCode]: number }>\n\nexport class ExchangeStore {\n    rootStore: RootStore\n    rates: Rate[] = []\n    constructor(rootStore: RootStore, storage: IStorage, currencyList: CurrencyParams[]) {\n        console.log('creating ExchangeStore...')\n        this.rootStore = rootStore\n        currencyList.forEach(currency => {\n            const rate = new Rate(currency.currencyCode, currency.range)\n            this.rates.push(rate)\n        })\n        makeObservable(this, {\n            rootStore: false,\n            rates: observable,\n            ratesObj: computed,\n        })\n    }\n    get ratesObj() {\n        const obj: Rates = {}\n        for (const rate of this.rates) {\n            obj[rate.currencyCode] = rate.value\n        }\n        return obj\n    }\n    dispose() {\n        console.log('disposing ExchangeStore...')\n        this.rates.forEach(rate => {\n            rate.dispose()\n        })\n    }\n}\n","import { makeObservable, observable, action, makeAutoObservable, computed } from \"mobx\"\nimport { CurrencyCode } from \"../common\"\nimport { RootStore } from \"./rootStore\"\nimport IStorage from \"./storage\"\n\nclass OrderItemDto {\n    id: number\n    orderId: number\n    item: string\n    price: number\n    quantity: number\n    constructor(\n        id: number,\n        orderId: number,\n        item: string,\n        price: number,\n        quantity: number\n    ) {\n        this.id = id\n        this.orderId = orderId\n        this.item = item\n        this.price = price\n        this.quantity = quantity\n    }\n}\n\nexport class OrderItem extends OrderItemDto {\n    store: OrderStore\n    constructor(\n        store: OrderStore,\n        id: number,\n        orderId: number,\n        item: string,\n        price: number,\n        quantity: number\n    ) {\n        super(id, orderId, item, price, quantity)\n        this.store = store\n        makeObservable(this, {\n            store: false,\n            id: false,\n            orderId: false,\n            item: observable,\n            price: observable,\n            quantity: observable,\n        })\n    }\n    get order() {\n        return this.store.orders.find(order => order.id === this.orderId)\n    }\n}\n\nclass OrderDto {\n    id: number\n    clientId: number\n    orderCurrencyCode: CurrencyCode\n    paymentCurrencyCode: CurrencyCode\n    isPaid: boolean\n    isDelivered: boolean\n    paid?: number\n    constructor(\n        id: number,\n        clientId: number,\n        orderCurrencyCode: CurrencyCode,\n        paymentCurrencyCode: CurrencyCode,\n        isPaid: boolean,\n        isDelivered: boolean,\n        paid?: number\n    ) {\n        this.id = id\n        this.clientId = clientId\n        this.orderCurrencyCode = orderCurrencyCode\n        this.paymentCurrencyCode = paymentCurrencyCode\n        this.isPaid = isPaid\n        this.isDelivered = isDelivered\n        this.paid = paid\n    }\n}\n\nexport class Order extends OrderDto {\n    store: OrderStore\n    constructor(\n        store: OrderStore,\n        id: number,\n        clientId: number,\n        orderCurrencyCode: CurrencyCode,\n        paymentCurrencyCode: CurrencyCode,\n        isPaid = false,\n        isDelivered = false,\n        paid?: number\n    ) {\n        super(id, clientId, orderCurrencyCode, paymentCurrencyCode, isPaid, isDelivered, paid)\n        this.store = store\n        makeObservable(this, {\n            store: false,\n            id: false,\n            clientId: false,\n            orderCurrencyCode: false,\n            paymentCurrencyCode: observable,\n            isPaid: observable,\n            isDelivered: observable,\n            items: computed,\n            total: computed,\n            addItem: action.bound,\n        })\n    }\n    get items() {\n        return this.store.orderItems.filter(item => item.orderId === this.id)\n    }\n    get total() {\n        return this.items.reduce((total, item) => total + item.price * item.quantity, 0)\n    }\n    get client() {\n        return this.store.rootStore.clientStore.clients.find(client => client.id === this.clientId)\n    }\n    addItem(item: string, price: number, quantity: number) {\n        console.log('adding orderItem...')\n        const orderItem = new OrderItem(\n            this.store,\n            Math.max(...this.store.orderItems.map(oi => oi.id)) + 1,\n            this.id,\n            item,\n            price,\n            quantity\n        )\n        this.store.orderItems.push(orderItem)\n    }\n}\n\nconst initialOrders: OrderDto[] = [\n    new OrderDto(1, 1, 'RUB', 'USD', true, true, 6.05),\n    new OrderDto(2, 2, 'JPY', 'EUR', true, true, 1.88),\n]\n\nconst initialOrderItems: OrderItemDto[] = [\n    new OrderItemDto(1, 1, \"Pelmeni\", 0.37, 1),\n    new OrderItemDto(2, 1, \"Vodka\", 3.62, 1),\n    new OrderItemDto(3, 2, \"Susi\", 249, 1)\n]\n\nexport class OrderStore {\n    rootStore: RootStore\n    orders: Order[] = []\n    orderItems: OrderItem[] = []\n    addOrder: (clientId: number, orderCurrencyCode: CurrencyCode,\n        paymentCurrencyCode: CurrencyCode, isPaid?: boolean,\n        isDelivered?: boolean, paid?: number | undefined) => Order\n    addOrderItem: (orderId: number, item: string, price: number, quantity: number) => OrderItem\n    reset: () => void\n    save: () => void\n    constructor(rootStore: RootStore, storage: IStorage) {\n        console.log('creating OrderStore...')\n        this.rootStore = rootStore\n        this.save = () => {\n            const orderToDto = (order: Order) => ({\n                id: order.id,\n                clientId: order.clientId,\n                orderCurrencyCode: order.orderCurrencyCode,\n                paymentCurrencyCode: order.paymentCurrencyCode,\n                isPaid: order.isPaid,\n                isDelivered: order.isDelivered,\n                paid: order.paid\n            })\n            const orderItemToDto = (orderItem: OrderItem) => ({\n                id: orderItem.id,\n                orderId: orderItem.orderId,\n                item: orderItem.item,\n                price: orderItem.price,\n                quantity: orderItem.quantity\n            })\n            storage.save('mcd/orders', JSON.stringify(this.orders.map(orderToDto)))\n            console.log(`saved ${this.orders.length} order(s)`)\n            storage.save('mcd/orderItems', JSON.stringify(this.orderItems.map(orderItemToDto)))\n            console.log(`saved ${this.orderItems.length} orderItem(s)`)\n        }\n        const orderFromDto = (dto: OrderDto) => new Order(\n            this, dto.id, dto.clientId, dto.orderCurrencyCode,\n            dto.paymentCurrencyCode, dto.isPaid, dto.isDelivered, dto.paid\n        )\n        const orderItemFromDto = (dto: OrderItemDto) => new OrderItem(\n            this, dto.id, dto.orderId, dto.item,\n            dto.price, dto.quantity\n        )\n        this.reset = () => {\n            console.log('reset Orders')\n            this.orders = initialOrders.map(orderFromDto)\n            console.log('reset OrderItems')\n            this.orderItems = initialOrderItems.map(orderItemFromDto)\n        }\n        this.addOrder = (clientId: number, orderCurrencyCode: CurrencyCode,\n            paymentCurrencyCode: CurrencyCode, isPaid?: boolean,\n            isDelivered?: boolean, paid?: number | undefined) => {\n            console.log('adding order...')\n            const order = new Order(\n                this,\n                Math.max(...this.orders.map(order => order.id)) + 1,\n                clientId,\n                orderCurrencyCode,\n                paymentCurrencyCode,\n                isPaid,\n                isDelivered,\n                paid\n            )\n            this.orders.push(order)\n            return order\n        }\n        this.addOrderItem = (orderId: number, item: string, price: number, quantity: number) => {\n            console.log('adding orderItem...')\n            const orderItem = new OrderItem(\n                this,\n                Math.max(...this.orderItems.map(orderItem => orderItem.id)) + 1,\n                orderId,\n                item,\n                price,\n                quantity\n            )\n            this.orderItems.push(orderItem)\n            return orderItem\n        }\n        this.orders = JSON.parse(storage.load('mcd/orders') ?? '[]').map(orderFromDto)\n        console.log(`loaded ${this.orders.length} order(s)`)\n        if (!this.orders.length) {\n            console.log('used initialOrders')\n            this.orders = initialOrders.map(orderFromDto)\n        }\n        this.orderItems = JSON.parse(storage.load('mcd/orderItems') ?? '[]').map(orderItemFromDto)\n        console.log(`loaded ${this.orderItems.length} orderItems(s)`)\n        if (!this.orderItems.length) {\n            console.log('used initialOrderItems')\n            this.orderItems = initialOrderItems.map(orderItemFromDto)\n        }\n        makeObservable(this, {\n            rootStore: false,\n            orders: observable,\n            orderItems: observable,\n            reset: action.bound,\n            addOrder: action.bound,\n            addOrderItem: action.bound\n        })\n    }\n}","export default interface IStorage {\n    save: (key: string, value: string) => void\n    load: (key: string) => string | null\n}\n\nexport class LocalStorage implements IStorage {\n    save(key: string, value: string) {\n        localStorage.setItem(key, value)\n    }\n    load(key: string) {\n        return localStorage.getItem(key)\n    }\n}\n\n\n// /** This Web Storage API interface provides access to a particular domain's session or local storage. It allows, for example, the addition, modification, or deletion of stored data items. */\n// interface Storage {\n//     /**\n//      * Returns the number of key/value pairs currently present in the list associated with the object.\n//      */\n//     readonly length: number;\n//     /**\n//      * Empties the list associated with the object of all key/value pairs, if there are any.\n//      */\n//     clear(): void;\n//     /**\n//      * Returns the current value associated with the given key, or null if the given key does not exist in the list associated with the object.\n//      */\n//     getItem(key: string): string | null;\n//     /**\n//      * Returns the name of the nth key in the list, or null if n is greater than or equal to the number of key/value pairs in the object.\n//      */\n//     key(index: number): string | null;\n//     /**\n//      * Removes the key/value pair with the given key from the list associated with the object, if a key/value pair with the given key exists.\n//      */\n//     removeItem(key: string): void;\n//     /**\n//      * Sets the value of the pair identified by key to value, creating a new key/value pair if none existed for key previously.\n//      * \n//      * Throws a \"QuotaExceededError\" DOMException exception if the new value couldn't be set. (Setting could fail if, e.g., the user has disabled storage for the site, or if the quota has been exceeded.)\n//      */\n//     setItem(key: string, value: string): void;\n//     [name: string]: any;\n// }\n\n// declare var Storage: {\n//     prototype: Storage;\n//     new(): Storage;\n// };","import { computed, makeObservable, observable } from \"mobx\"\nimport { RootStore } from \"./rootStore\"\nimport IStorage from \"./storage\"\n\nexport class UiStore {\n    rootStore: RootStore\n    selectedDondalId?= 1\n    selectedClientId = 1\n    isCreateNewOrderVisible?= false\n    newOrderTotal = 0 // dondal currency \n    newOrderClientsTotal = 0 // client currency\n    selectedOrderId: number | null = null\n\n    constructor(rootStore: RootStore, storage: IStorage) {\n        console.log('creating ClientStore...')\n        this.rootStore = rootStore\n        makeObservable(this, {\n            selectedDondalId: observable,\n            selectedClientId: observable,\n            selectedOrderId: observable,\n            isCreateNewOrderVisible: observable,\n            newOrderTotal: observable,\n            newOrderClientsTotal: observable,\n            selectedClient: computed,\n            selectedDondal: computed,\n            selectedOrder: computed,\n        })\n    }\n\n    get selectedClient() {\n        return this.rootStore.clientStore.clients.find(client => client.id === this.selectedClientId)\n    }\n    get selectedDondal() {\n        return this.rootStore.dondalsStore.dondals.find(dondal => dondal.id === this.selectedDondalId)\n    }\n    get selectedOrder() {\n        return this.rootStore.orderStore.orders.find(order => order.id === this.selectedOrderId)\n    }\n}","import { makeObservable, observable } from \"mobx\"\nimport { ClientStore } from \"./clientStore\"\nimport { DondalsStore } from \"./dondalsStore\"\nimport { ExchangeStore } from \"./exchangeStore\"\nimport { OrderStore } from \"./orderStore\"\nimport { LocalStorage } from \"./storage\"\nimport { UiStore } from \"./uiStore\"\n\nexport class RootStore {\n    orderStore: OrderStore\n    clientStore: ClientStore\n    dondalsStore: DondalsStore\n    exchangeStore: ExchangeStore\n    uiStore: UiStore\n    save: () => void\n    constructor() {\n        console.log('creating RootStore:')\n        this.uiStore = new UiStore(this, new LocalStorage())\n        this.clientStore = new ClientStore(this, new LocalStorage())\n        this.orderStore = new OrderStore(this, new LocalStorage())\n        this.dondalsStore = new DondalsStore(this, new LocalStorage())\n        this.exchangeStore = new ExchangeStore(\n            this,\n            new LocalStorage(),\n            [\n                { currencyCode: 'USD', range: { from: 1, to: 1 } },\n                { currencyCode: 'EUR', range: { from: 1.01, to: 1.1 } },\n                { currencyCode: 'RUB', range: { from: 0.66, to: 0.66 } },\n                { currencyCode: 'GBP', range: { from: 0.8, to: 0.85 } },\n                { currencyCode: 'JPY', range: { from: 135, to: 139 } },\n                { currencyCode: 'THB', range: { from: 32, to: 37 } },\n                { currencyCode: 'INR', range: { from: 73, to: 80 } },\n            ]\n        )\n        this.save = () => {\n            console.log('saving RootStore...')\n            this.clientStore.save()\n            this.orderStore.save()\n            this.dondalsStore.save()\n        }\n    }\n    dispose() {\n        console.log('disposing RootStore...')\n        this.exchangeStore.dispose()\n        this.dondalsStore.dispose()\n    }\n}","import { trace } from 'mobx';\nimport React, { createContext, FC, useContext, useEffect, useState } from 'react'\nimport { RootStore } from './store/rootStore';\n\nconsole.log('<createContext<RootStore>>')\nconst RootStoreContext = createContext<RootStore>(undefined!);\nconsole.log('</createContext<RootStore>>')\n\ninterface Props {\n    children: React.ReactNode\n}\n\nexport const RootStoreProvider: FC<Props> = ({ children }) => {\n    const [store] = useState(() => {\n        console.log('<useState in RootStoreProvider>')\n        const state = new RootStore()\n        console.log('</useState in RootStoreProvider>')\n        return state\n    });\n    useEffect(() => {\n        return () => {\n            store.save()\n            store.dispose()\n        };\n    }, []);\n    return (\n        <RootStoreContext.Provider value={store}>\n            {children}\n        </RootStoreContext.Provider>\n    )\n}\n\nexport const useRootStore = () => useContext(RootStoreContext)\n","// extracted by mini-css-extract-plugin\nexport default {\"newDondal\":\"AddNewDondalView_newDondal__FvhMC\",\"disabled\":\"AddNewDondalView_disabled__eEeWX\",\"add\":\"AddNewDondalView_add__iuBhH\",\"show\":\"AddNewDondalView_show__IZZ+E\"};","import React, { FC, useEffect, useRef, useState } from 'react';\nimport { CountryCode, RegionalSettings } from '../../../common';\nimport { useRootStore } from '../../../RootStoreContext';\nimport styles from './AddNewDondalView.module.scss'\n\ninterface Props extends React.ComponentProps<\"div\"> {\n    setDondalId: (id: number) => void\n}\n\nconst AddNewDondalView: FC<Props> = ({ setDondalId, ...props }) => {\n    const store = useRootStore().dondalsStore\n    const [countryCode, setCountryCode] = useState<string | null>(null);\n    const [name, setName] = useState('');\n    const refName = useRef<HTMLInputElement>(null)\n    useEffect(() => {\n        setTimeout(() => refName.current?.focus(), 0)\n    }, [countryCode]);\n    const addDondal = () => {\n        const dondal = store.addDondal(countryCode as CountryCode, name.trim())\n        setDondalId(dondal.id)\n        setName('')\n        setCountryCode(null)\n    }\n    return (\n        <div className={styles.newDondal} {...props}>\n            <label>Country:</label>\n            <select value={countryCode || ''} onChange={(e) => setCountryCode(e.target.value)}>\n                <option value=''>--- Select country ---</option>\n                {Object.entries(RegionalSettings).map(entry =>\n                    <option key={entry[0]} value={entry[0]} >{entry[1].country}</option>\n                )}\n            </select><br />\n            <label>Name:</label>\n            <input type=\"text\" ref={refName} value={name} onChange={e => setName(e.target.value)} />\n            <span className={`${styles.add} ${countryCode && name ? \"\" : styles.disabled}`} onClick={addDondal}></span>\n        </div >\n    );\n}\n\nexport default AddNewDondalView;\n","// extracted by mini-css-extract-plugin\nexport default {\"dondals\":\"DondalView_dondals__pzbK2\",\"logo\":\"DondalView_logo__yPKim\",\"remove\":\"DondalView_remove__19fyK\",\"show\":\"DondalView_show__Yf+bq\",\"disabled\":\"DondalView_disabled__96Umf\"};","// extracted by mini-css-extract-plugin\nexport default {\"dondaldLogo\":\"Logo_dondaldLogo__1jtE3\",\"logo\":\"Logo_logo__xT5Y5\"};","import React, { FC } from 'react';\nimport Flags from 'country-flag-icons/react/3x2'\nimport logo from './logo.png'\nimport styles from './Logo.module.scss'\nimport { CountryCode } from '../../../common';\n\ninterface Props {\n    countryCode: CountryCode\n}\nconst Logo: FC<Props> = ({ countryCode }) => {\n    const Flag = Flags[countryCode];\n    console.log('--- rendering Logo')\n    return (\n        <div className={styles.dondaldLogo}>\n            <div className={styles.logo}>\n                <img src={logo} alt=\"logo.png\"></img>\n                <Flag />\n            </div>\n        </div>\n    );\n}\n\nexport default Logo;\n","// extracted by mini-css-extract-plugin\nexport default {\"menuItem\":\"MenuItemView_menuItem__VmGRC\",\"name\":\"MenuItemView_name__DmQ0Z\",\"price\":\"MenuItemView_price__0xXuw\",\"remove\":\"MenuItemView_remove__r984f\",\"edit\":\"MenuItemView_edit__Rq39g\",\"cancel\":\"MenuItemView_cancel__yR5R9\",\"save\":\"MenuItemView_save__f4Zdh\",\"show\":\"MenuItemView_show__RmFK9\",\"view\":\"MenuItemView_view__4CMg9\"};","import React, { FC, useRef, useState } from 'react';\nimport { useRootStore } from '../../../RootStoreContext';\nimport { MenuItem } from '../../../store/dondalsStore';\nimport styles from './MenuItemView.module.scss'\n\ninterface Props {\n    menuItem: MenuItem\n    currencyFormatter: (amount: number | bigint) => string\n}\n\nconst MenuItemView: FC<Props> = ({ menuItem, currencyFormatter }) => {\n    const store = useRootStore().dondalsStore\n    const [editingMode, setEditingMode] = useState(false);\n    const [name, setName] = useState(menuItem.name);\n    const [price, setPrice] = useState(menuItem.price);\n    const refPrice = useRef<HTMLInputElement>(null)\n    const updateMenuItem = () => {\n        setName(name => name.trim())\n        store.updateMenuItem(menuItem.id, name, price)\n        setEditingMode(false)\n    }\n    const removeMenuItem = () => {\n        store.removeMenuItem(menuItem.id)\n    }\n    const cancelEditing = () => {\n        setName(menuItem.name)\n        setPrice(menuItem.price)\n        setEditingMode(false)\n    }\n    const setEditing = () => {\n        setEditingMode(true)\n        setTimeout(() => {\n            refPrice.current?.focus()\n            refPrice.current?.select()\n        }, 0)\n    }\n    return (\n        <li key={menuItem.id} className={`${styles.menuItem} ${editingMode ? styles.edit : styles.view}`}>\n            <span className={styles.name}>{menuItem.name}</span>\n            <input type=\"text\" className={styles.name} value={name} onChange={(e) => setName(e.target.value)} />\n            <span className={styles.price}>{currencyFormatter(menuItem.price)}</span>\n            <input type=\"number\" className={styles.price} ref={refPrice} value={price} onChange={(e) => setPrice(parseFloat(e.target.value))} />\n            <span className={styles.remove} onClick={removeMenuItem}></span>\n            <span className={styles.edit} onClick={setEditing}></span>\n            <span className={styles.cancel} onClick={cancelEditing}></span>\n            <span className={styles.save} onClick={updateMenuItem}></span>\n        </li>\n    );\n}\n\nexport default MenuItemView;\n","// extracted by mini-css-extract-plugin\nexport default {\"menu\":\"MenuView_menu__EB74n\"};","// extracted by mini-css-extract-plugin\nexport default {\"addItem\":\"AddMenuItemView_addItem__TUOvR\",\"disabled\":\"AddMenuItemView_disabled__2UziJ\",\"show\":\"AddMenuItemView_show__zDynx\"};","import React, { FC, useEffect, useRef, useState } from 'react';\nimport { useRootStore } from '../../../RootStoreContext';\nimport styles from './AddMenuItemView.module.scss'\n\ninterface Props extends React.ComponentProps<\"div\"> {\n    dondalId: number\n}\nconst AddMenuItemView: FC<Props> = ({ dondalId, ...props }) => {\n    const store = useRootStore().dondalsStore\n    const [name, setName] = useState('');\n    const [price, setPrice] = useState<string>('');\n    const refName = useRef<HTMLInputElement>(null)\n    useEffect(() => {\n        setTimeout(() => {\n            refName.current?.focus()\n        }, 0)\n    }, [dondalId]);\n    const add = () => {\n        store.addMenuItem(dondalId, name, parseFloat(price))\n        setName('')\n        setPrice('')\n    }\n    const isDisabled = () => store.menuItems.filter(mi => mi.dondalId === dondalId).length > 4\n    return (\n        <div className={styles.addItem} {...props}>\n            <input type=\"text\" value={name} onChange={(e) => setName(e.target.value)} disabled={isDisabled()} ref={refName} placeholder=\"Menu entry name\" />\n            <input type=\"number\" value={price} onChange={(e) => setPrice(e.target.value)} disabled={isDisabled()} />\n            <span className={(name.length && price) ? \"\" : styles.disabled} onClick={add}></span>\n        </div>\n    );\n}\n\nexport default AddMenuItemView;\n","import React, { FC } from 'react';\nimport { RegionalSettings } from '../../../common';\nimport { useRootStore } from '../../../RootStoreContext';\nimport MenuItemView from '../MenuItemView/MenuItemView';\nimport { Dondal } from '../../../store/dondalsStore'\nimport styles from './MenuView.module.scss'\nimport AddMenuItemView from '../AddMenuItemView/AddMenuItemView';\nimport { observer } from 'mobx-react';\n\ninterface Props {\n    dondal: Dondal\n}\n\nconst MenuView: FC<Props> = observer(({ dondal }) => {\n    const store = useRootStore().dondalsStore\n    const settings = RegionalSettings[dondal.countryCode]\n    const currencyFormatter = (amount: number | bigint) =>\n        new Intl.NumberFormat(settings.locale, {\n            style: 'currency', currency: settings.currencyCode\n        }).format(amount)\n    return (\n        <>\n            <AddMenuItemView style={{ marginBottom: \"5px\" }} dondalId={dondal.id} /><br />\n            <ul className={styles.menu}>\n                {store.menuItems\n                    .filter(menuItem => menuItem.dondalId === dondal.id)\n                    .sort((item1, item2) => item1.id - item2.id)\n                    .map(menuItem =>\n                        <MenuItemView key={menuItem.id} menuItem={menuItem} currencyFormatter={currencyFormatter} />\n                    )\n                }\n            </ul>\n        </>\n    );\n})\n\nexport default MenuView;\n","import React, { FC, useState } from 'react';\nimport styles from './DondalView.module.scss'\nimport { useRootStore } from '../../../RootStoreContext';\nimport { observer } from 'mobx-react';\nimport Logo from '../Logo/Logo';\nimport MenuView from '../MenuView/MenuView';\nimport { action } from 'mobx';\n\ninterface Props {\n    id?: number\n    refresh: () => void\n}\n\nconst DondalView: FC<Props> = observer(({ id, refresh }) => {\n    const [donaldId, setDonaldId] = useState(id ?? 1);\n    const store = useRootStore().dondalsStore\n    const dondal = store.dondals.find(dondal => dondal.id === id ?? 1)!\n    const remove = action(() => {\n        dondal.terminated = true\n        refresh()\n    })\n    console.log('--- rendering DondalView')\n    return (\n        <div className={styles.dondals}>\n            <Logo countryCode={dondal.countryCode} />\n            <span className={`${styles.remove} ${id === 1 ? styles.disabled : \"\"}`} onClick={remove}></span><br />\n            <MenuView dondal={dondal} />\n        </div>\n    );\n})\n\nexport default DondalView;\n","// extracted by mini-css-extract-plugin\nexport default {\"dondalsMain\":\"DondalsMainView_dondalsMain__83W8b\",\"selector\":\"DondalsMainView_selector__bV8FX\",\"balance\":\"DondalsMainView_balance__+jkl9\",\"restore\":\"DondalsMainView_restore__SaB2d\",\"show\":\"DondalsMainView_show__tvAh0\"};","import { observer } from 'mobx-react';\nimport React, { useEffect, useState } from 'react';\nimport { useRootStore } from '../../../RootStoreContext';\nimport AddNewDondalView from '../AddNewDondalView/AddNewDondalView';\nimport DondalView from '../DondalView/DondalView';\nimport restore from './restore.png'\nimport styles from './DondalsMainView.module.scss'\nimport { runInAction } from 'mobx';\nimport { currencyFormatter, RegionalSettings } from '../../../common';\n\ninterface Props {\n    id: number\n}\n\nconst DondalsMainView = observer(() => {\n    const [dondalId, setDondalId] = useState(1);\n    const store = useRootStore().dondalsStore\n    const uiStore = store.rootStore.uiStore\n    useEffect(() => {\n        console.log('useEffect. dondalId=' + dondalId)\n        runInAction(() => {\n            store.rootStore.uiStore.selectedDondalId = dondalId\n        })\n    }, [dondalId]);\n    const addDondal = () => {\n        store.addRandomDondal()\n        setDondalId(Math.max(...store.dondals.map(dondal => dondal.id)))\n    }\n    const onRestore = () => {\n        setDondalId(1)\n        store.reset()\n    }\n    const getBalanceStr = () => {\n        return currencyFormatter(RegionalSettings[uiStore.selectedDondal!.countryCode].currencyCode)\n            .format(uiStore.selectedDondal!.balance)\n    }\n    return (\n        <div className={styles.dondalsMain}>\n            <div className={styles.selector} style={{ height: 25 }}>\n                <select value={dondalId} onChange={(e) => setDondalId(parseInt(e.target.value))}>\n                    {store.dondals.filter(dondal => !dondal.terminated).map(dondal =>\n                        <option key={dondal.id} value={dondal.id}>({dondal.countryCode}) {dondal.name}</option>\n                    )}\n                </select>\n                <img className={styles.restore} src={restore}></img>\n                <span className={styles.restore} onClick={onRestore}></span>\n                <label className={styles.balance}>Balance: {getBalanceStr()}</label>\n            </div>\n            <AddNewDondalView setDondalId={setDondalId} style={{ top: 28, left: 130 }} />\n            <DondalView id={dondalId} refresh={() => setDondalId(1)} />\n        </div>\n    );\n})\n\nexport default DondalsMainView;\n","// extracted by mini-css-extract-plugin\nexport default {\"newOrder\":\"CreateNewOrderView_newOrder__YJqcp\",\"hidden\":\"CreateNewOrderView_hidden__+FXZL\",\"total\":\"CreateNewOrderView_total__8zDcn\"};","import { runInAction } from 'mobx';\nimport { observer } from 'mobx-react';\nimport React, { FC, useState } from 'react';\nimport { useRootStore } from '../../../RootStoreContext';\nimport { MenuItem } from '../../../store/dondalsStore';\nimport { currencyFormatter, RegionalSettings } from '../../../common'\nimport styles from './CreateNewOrderView.module.scss'\n\ninterface Props extends React.ComponentProps<\"div\"> {\n    onNewOrderCreated: (orderId: number | null) => void\n}\n\nconst CreateNewOrderView: FC<Props> = observer(({ className, onNewOrderCreated, ...props }) => {\n    console.log('--- rendering CreateNewOrderView')\n    const rootStore = useRootStore()\n    const uiStore = rootStore.uiStore\n    const dondalId = uiStore.selectedDondalId\n    const isVisible = uiStore.isCreateNewOrderVisible\n    const [qty, setQty] = useState<{ [key: number]: number | undefined }>({});\n    console.log(qty)\n    const onCancel = () => {\n        runInAction(() => {\n            uiStore.isCreateNewOrderVisible = false\n        })\n        setQty({})\n        onNewOrderCreated(null)\n    }\n    const onQtyChange = (mi: MenuItem, quantity: number) => {\n        setQty({ ...qty, [mi.id]: (quantity < 1 ? 0 : quantity > 99 ? 99 : quantity) })\n    }\n    const calcTotal = () => {\n        const total = rootStore.dondalsStore.menuItems\n            .filter(mi => mi.dondalId === dondalId)\n            .reduce((total, mi) => total + mi.price * (qty[mi.id] || 0), 0)\n        runInAction(() => {\n            uiStore.newOrderTotal = total\n        })\n        return total\n    }\n    const calcClientsTotal = () => {\n        const client = uiStore.selectedClient!\n        const dondal = uiStore.selectedDondal!\n        const rates = rootStore.exchangeStore.ratesObj\n        const total = calcTotal()\n        const clientsTotal = total / (rates[RegionalSettings[dondal.countryCode].currencyCode] || 1) * (rates[client.currencyCode] || 1)\n        runInAction(() => {\n            uiStore.newOrderClientsTotal = clientsTotal\n        })\n        return currencyFormatter(client.currencyCode).format(clientsTotal)\n    }\n    const format = currencyFormatter(\n        RegionalSettings[\n            uiStore.selectedDondal!.countryCode\n        ].currencyCode\n    ).format\n    const onPay = () => {\n        const order = rootStore.orderStore.addOrder(\n            uiStore.selectedClientId,\n            RegionalSettings[uiStore.selectedDondal!.countryCode].currencyCode,\n            uiStore.selectedClient!.currencyCode,\n            true, true,\n            uiStore.newOrderClientsTotal\n        )\n        rootStore.dondalsStore.menuItems\n            .filter(mi => mi.dondalId === dondalId && (qty[mi.id] || 0) > 0)\n            .forEach(mi => {\n                rootStore.orderStore.addOrderItem(\n                    order.id,\n                    mi.name,\n                    mi.price,\n                    qty[mi.id]!\n                )\n            })\n        runInAction(() => {\n            uiStore.selectedClient!.balance -= uiStore.newOrderClientsTotal\n        })\n        runInAction(() => {\n            uiStore.selectedOrderId = order.id\n            uiStore.isCreateNewOrderVisible = false\n        })\n        runInAction(() => {\n            uiStore.selectedDondal!.balance += uiStore.newOrderTotal\n        })\n        setQty({})\n        onNewOrderCreated(order.id)\n    }\n    return (\n        <div className={`${styles.newOrder} ${isVisible ? \"\" : styles.hidden} ${className ?? \"\"}`} {...props}>\n            {/* <span style={{ color: 'blue' }}>CreateNewOrderView</span> */}\n            {dondalId && rootStore.dondalsStore.menuItems\n                .filter(mi => mi.dondalId === dondalId).map(menuItem =>\n                    <div key={menuItem.id} className={styles.mi}>\n                        <span>{menuItem.name}</span>\n                        <span>{format(menuItem.price)}</span>\n                        <span> x</span>\n                        <input type=\"number\" value={qty[menuItem.id] || ''} onChange={(e) => onQtyChange(menuItem, parseInt(e.target.value || '0'))} />\n                        {!!qty[menuItem.id] && <span>  = {format(qty[menuItem.id]! * menuItem.price)}</span>}\n                    </div>\n                )\n            }\n            {dondalId &&\n                <div className={styles.total}>\n                    <label>Total: </label>\n                    <span style={{ color: (uiStore.selectedClient?.balance || 0) < uiStore.newOrderClientsTotal ? 'red' : 'black' }}\n                    >{calcClientsTotal()}</span>\n                    <span>{format(calcTotal())}</span>\n                </div>\n            }\n            <footer>\n                <button onClick={onPay}\n                    disabled={\n                        (uiStore.selectedClient!.balance\n                            < uiStore.newOrderClientsTotal)\n                        ||\n                        uiStore.newOrderClientsTotal === 0\n                    }\n                >Pay</button>\n                <button onClick={onCancel}>Cancel</button>\n            </footer>\n        </div>\n    );\n})\n\nexport default CreateNewOrderView;\n","// extracted by mini-css-extract-plugin\nexport default {\"orderlist\":\"OrderListView_orderlist__j0YtI\",\"hidden\":\"OrderListView_hidden__-ttc7\"};","import { action } from 'mobx';\nimport { observer } from 'mobx-react';\nimport React, { FC, useEffect, useRef } from 'react';\nimport { currencyFormatter } from '../../../common';\nimport { useRootStore } from '../../../RootStoreContext';\nimport { Order } from '../../../store/orderStore';\nimport styles from './OrderListView.module.scss'\n\ninterface Props extends React.ComponentProps<\"div\"> {\n    clientId: number\n}\n\nconst OrderListView: FC<Props> = observer(({ clientId }) => {\n    const orderStore = useRootStore().orderStore\n    const uiStore = orderStore.rootStore.uiStore\n    const isVisible = !uiStore.isCreateNewOrderVisible\n    const refUl = useRef<HTMLUListElement>(null)\n    useEffect(action(() => {\n        {\n            uiStore.selectedOrderId = orderStore.orders\n                .filter(order => order.clientId === clientId)\n                .sort((o1, o2) => o2.id - o1.id)[0]?.id\n        }\n    }), [clientId]);\n    useEffect(() => {\n        refUl.current?.scroll(0, 0)\n    }, [orderStore.orders.filter(order => order.clientId === clientId).length]);\n    const onSelectOrder = action((order: Order) => {\n        uiStore.selectedOrderId = order.id\n    })\n    return (\n        <>\n            <ul ref={refUl} className={`${styles.orderlist} ${isVisible ? \"\" : styles.hidden}`}>\n                {orderStore.orders\n                    .filter(order => order.clientId === clientId)\n                    .sort((o1, o2) => o2.id - o1.id)\n                    .map(order =>\n                        <li\n                            key={order.id}\n                            onClick={() => onSelectOrder(order)}\n                            style={{ background: order.id === uiStore.selectedOrderId ? \"#f3de6a\" : \"inherit\" }}\n                        >\n                            <span>{currencyFormatter(order.orderCurrencyCode).format(order.total)}</span>\n                            <span>({currencyFormatter(order.paymentCurrencyCode).format(order.paid || 0)})</span>\n                        </li>\n                    )}\n                {/* <li style={{ color: 'blue' }}>OrderListView</li> */}\n            </ul>\n        </>\n    );\n})\n\nexport default OrderListView;\n","// extracted by mini-css-extract-plugin\nexport default {\"orderitem\":\"OrderItemView_orderitem__06KEG\"};","import { observer } from 'mobx-react';\nimport React, { FC } from 'react';\nimport { currencyFormatter } from '../../../common';\nimport { OrderItem } from '../../../store/orderStore';\nimport styles from './OrderItemView.module.scss'\n\ninterface Props {\n    orderItem: OrderItem\n}\n\nconst OrderItemView: FC<Props> = observer(({ orderItem }) => {\n    const format = currencyFormatter(orderItem.order!.orderCurrencyCode).format\n    return (\n        <li className={styles.orderitem}>\n            <label>{orderItem.item}</label>\n            <span>{format(orderItem.price)}</span>\n            <span> * </span>\n            <span>{orderItem.quantity}</span>\n        </li>\n    );\n})\n\nexport default OrderItemView;\n","// extracted by mini-css-extract-plugin\nexport default {\"order\":\"OrderView_order__DnbjW\",\"hidden\":\"OrderView_hidden__bQrMp\"};","import { observer } from 'mobx-react';\nimport React, { FC } from 'react';\nimport { currencyFormatter } from '../../../common';\nimport { useRootStore } from '../../../RootStoreContext';\nimport { Order } from '../../../store/orderStore'\nimport OrderItemView from '../OrderItemView/OrderItemView';\nimport styles from './OrderView.module.scss'\n\ninterface Props {\n    order?: Order\n}\n\nconst OrderView: FC<Props> = observer(({ order }) => {\n    console.log('--- rendering Order')\n    console.log(order)\n    const uiStore = useRootStore().uiStore\n    const isVisible = !uiStore.isCreateNewOrderVisible\n    if (!order) {\n        return (\n            <>\n            </>\n        )\n    }\n    return (\n        <div className={`${styles.order} ${isVisible ? \"\" : styles.hidden}`}>\n            <ul>\n                {order!.items.map(orderItem =>\n                    <OrderItemView key={orderItem.id} orderItem={orderItem} />\n                )}\n            </ul><br />\n            <footer>\n                <span>Total: {currencyFormatter(order!.orderCurrencyCode).format(order?.total || 0)}</span>\n                <span>Paid: {currencyFormatter(order!.paymentCurrencyCode).format(order?.paid || 0)}</span>\n            </footer>\n            {/* <br /><span style={{ color: 'blue' }}>OrderView</span> */}\n        </div>\n    );\n})\n\nexport default OrderView;\n","// extracted by mini-css-extract-plugin\nexport default {\"iconButton\":\"IconButton_iconButton__QHkl2\",\"disabled\":\"IconButton_disabled__aCQ-m\",\"show\":\"IconButton_show__8MDCF\"};","import { observer } from 'mobx-react';\nimport React, { CSSProperties, FC } from 'react';\nimport styles from './IconButton.module.scss'\n\ntype ButtonType = \"add\" | \"save\" | \"remove\" | \"edit\" | \"restore\" | \"cancel\" | \"xmark\" | \"exit\" | \"cart\"\n\nconst ButtonIconData: { [key in ButtonType]: { code: string, tooltip: string } } = {\n    add: { code: '\\uf0fe', tooltip: 'Add' },\n    remove: { code: '\\uf2ed', tooltip: 'Remove' },\n    save: { code: '\\uf0c7', tooltip: 'Save' },\n    edit: { code: '\\uf044', tooltip: 'Edit' },\n    restore: { code: '', tooltip: 'Restore' },\n    cart: { code: '\\uf217', tooltip: 'New order' },\n    cancel: { code: '\\uf0e2', tooltip: 'Cancel' },\n    xmark: { code: '\\uf00d', tooltip: 'Close' },\n    exit: { code: '\\uf2f5', tooltip: 'Exit' },\n    // cancel: '&#xf0e2;',\n}\n\ninterface Props extends React.ComponentProps<\"span\"> {\n    type: ButtonType\n    children?: string\n    onClick: () => void\n    disabled: () => boolean\n}\n\nconst IconButton: FC<Props> = observer((\n    {\n        type,\n        children,\n        onClick,\n        disabled,\n        style,\n        ...props\n    }) => {\n    return (\n        <span {...props}\n            style={\n                {\n                    ...style || {},\n                    \"--tooltip\": `\"${children ?? ButtonIconData[type].tooltip}\"`\n                } as CSSProperties\n            }\n            data-icon={ButtonIconData[type].code}\n            className={`${styles.iconButton} ${disabled() ? styles.disabled : \"\"}`}\n            onClick={onClick}\n        ></span >\n    );\n})\n\nexport default IconButton;\n","// extracted by mini-css-extract-plugin\nexport default {};","import React, { FC, useEffect, useState } from 'react';\nimport { CountryCode, RegionalSettings } from '../../../common';\nimport styles from './SelectCountry.module.scss'\n\ninterface Props extends React.ComponentProps<\"select\"> {\n    setCountryCode: (value: CountryCode | null) => void\n    flag: boolean\n}\n\nconst SelectCountry: FC<Props> = ({ setCountryCode: onSelect, flag, ...props }) => {\n    const [countryCode, setCountryCode] = useState<string | null>(null);\n    useEffect(() => {\n        setCountryCode(null)\n    }, [flag]);\n    const handleChange = (e: React.ChangeEvent<HTMLSelectElement>) => {\n        const value = (e.target.value || null) as (CountryCode | null)\n        console.log({ selected: value })\n        setCountryCode(value)\n        onSelect(value)\n    }\n    return (\n        <select value={countryCode || ''} onChange={(e) => handleChange(e)} className={styles.selectCountry}>\n            <option value=''>- Select country -</option>\n            {Object.entries(RegionalSettings).map(entry =>\n                <option key={entry[0]} value={entry[0]} >{entry[1].country}</option>\n            )}\n        </select>\n    );\n}\n\nexport default SelectCountry;\n","// extracted by mini-css-extract-plugin\nexport default {\"newClient\":\"AddNewClientView_newClient__yybCY\",\"hidden\":\"AddNewClientView_hidden__80gUD\"};","import { observer } from 'mobx-react';\nimport React, { FC, useEffect, useRef, useState } from 'react';\nimport { CountryCode, RegionalSettings } from '../../../common';\nimport { useRootStore } from '../../../RootStoreContext';\nimport IconButton from '../../UI/IconButton/IconButton';\nimport SelectCountry from '../../UI/SelectCountry/SelectCountry';\nimport styles from './AddNewClientView.module.scss'\n\ninterface Props extends React.ComponentProps<\"div\"> {\n    hidden?: boolean\n    onClientAdd: (clientId: number | null) => void\n}\n\nconst AddNewClientView: FC<Props> = observer(({ hidden, onClientAdd }) => {\n    const store = useRootStore().clientStore\n    const [name, setName] = useState('');\n    const [flag, setFlag] = useState(false);\n    const [countryCode, setCountryCode] = useState<CountryCode | null>(null);\n    const refName = useRef<HTMLInputElement>(null)\n    const onCancel = () => {\n        setFlag(flag => !flag)\n        setName('')\n        setCountryCode(null)\n        onClientAdd(null)\n    }\n    const onSave = () => {\n        const id = store.addClient(name, countryCode!, RegionalSettings[countryCode!].currencyCode)\n        setFlag(flag => !flag)\n        setName('')\n        setCountryCode(null)\n        onClientAdd(id)\n    }\n    useEffect(() => {\n        setTimeout(() => refName.current?.focus(), 0)\n    });\n    return (\n        <div className={`${styles.newClient} ${hidden ? styles.hidden : \"\"}`}>\n            <input type=\"text\" ref={refName} placeholder=\"Full Name\" value={name} onChange={e => setName(e.target.value)} />\n            <SelectCountry setCountryCode={setCountryCode} flag={flag} />\n            <IconButton\n                type=\"cancel\"\n                onClick={onCancel}\n                disabled={() => false}\n                style={{ marginLeft: 5 }}\n            />\n            <IconButton\n                type=\"save\"\n                onClick={onSave}\n                disabled={() => (name.trim().length === 0) || (countryCode === null)}\n                style={{ marginLeft: 5 }}\n            />\n        </div >\n    );\n})\n\nexport default AddNewClientView;\n","// extracted by mini-css-extract-plugin\nexport default {\"purchases\":\"PurchasesByCountry_purchases__W6+C0\",\"hidden\":\"PurchasesByCountry_hidden__a5Zi6\",\"circle\":\"PurchasesByCountry_circle__zCr-L\",\"countries\":\"PurchasesByCountry_countries__H3MiM\"};","import React from 'react';\nimport { CountryCode, CurrencyCode, CurrencyCountry } from '../../../common';\nimport { useRootStore } from '../../../RootStoreContext';\nimport styles from './PurchasesByCountry.module.scss'\n\nconst PurchasesByCountry = () => {\n    const uiStore = useRootStore().uiStore\n    const spendings = uiStore.rootStore.orderStore.orders\n        .filter(o => o.clientId === uiStore.selectedClientId && o.isPaid)\n        .reduce(\n            (r: { [key in CountryCode]: number }, o) =>\n                (r[CurrencyCountry[o.orderCurrencyCode]] += (o.paid ?? 0), r),\n            { 'RU': 0, 'TH': 0, 'IN': 0, 'JP': 0, 'EU': 0, 'GB': 0, 'US': 0 }\n        )\n    console.log(spendings)\n    const total = Object.values(spendings).reduce((acc, curr) => acc + curr)\n    console.log('total: ', total)\n    const colors: { [key in CountryCode]: string } = {\n        'RU': 'red',\n        'TH': 'rgb(187, 255, 0)',\n        'IN': 'green',\n        'JP': 'yellow',\n        'EU': 'brown',\n        'GB': 'rgb(255, 0, 221)',\n        'US': 'rgb(0, 255, 255)',\n    }\n    const sectors: string[] = []\n    let currSector = 0\n    const countries2show: CountryCode[] = []\n    for (const key of Object.keys(spendings) as CountryCode[]) {\n        console.log(key, ': ', spendings[key])\n        if (spendings[key]) {\n            const fraction = spendings[key] / total\n            const sector = `${colors[key]} ${currSector}turn ${currSector + fraction}turn`\n            sectors.push(sector)\n            currSector += fraction\n            countries2show.push(key)\n        }\n    }\n    console.log(sectors.join(','))\n    const isVisible = (cc: CountryCode) => countries2show.includes(cc)\n    return (\n        <div className={`${styles.purchases} ${uiStore.isCreateNewOrderVisible || total === 0 ? styles.hidden : \"\"}`}>\n            {/* <div className={styles.circle} style={{ background: \"conic-gradient(red 0.2turn,green 0.2turn 0.6turn,cyan 0.6turn 0.7turn,blue 0.7turn)\" }}></div> */}\n            <div className={styles.circle} style={{ background: `conic-gradient(${sectors.join(',')})` }}></div>\n            <div className={styles.countries}>\n                {\n                    (Object.keys(colors) as CountryCode[])\n                        .map(key =>\n                            <div\n                                key={key}\n                                className={isVisible(key)\n                                    ? \"\"\n                                    : styles.hidden}\n                            >{key}</div>\n                        )\n                }\n            </div>\n        </div >\n    );\n}\n\nexport default PurchasesByCountry;\n","// extracted by mini-css-extract-plugin\nexport default {\"clientsMain\":\"ClientsMainView_clientsMain__+gIea\",\"selector\":\"ClientsMainView_selector__lXgY5\",\"hidden\":\"ClientsMainView_hidden__enzxD\",\"balance\":\"ClientsMainView_balance__nsNPg\",\"orders\":\"ClientsMainView_orders__necOL\",\"cnov\":\"ClientsMainView_cnov__JXLwD\",\"purchases\":\"ClientsMainView_purchases__X-2kg\"};","import { action, runInAction } from 'mobx';\nimport { observer } from 'mobx-react';\nimport React, { useEffect, useState } from 'react';\nimport { currencyFormatter } from '../../../common';\nimport { useRootStore } from '../../../RootStoreContext';\nimport CreateNewOrderView from '../../Order/CreateNewOrderView/CreateNewOrderView';\nimport OrderListView from '../../Order/OrderListView/OrderListView';\nimport OrderView from '../../Order/OrderView/OrderView';\nimport IconButton from '../../UI/IconButton/IconButton';\nimport AddNewClientView from '../AddNewClientView/AddNewClientView';\nimport PurchasesByCountry from '../PurchasesByCountry/PurchasesByCountry';\nimport styles from './ClientsMainView.module.scss'\n\nconst ClientsMainView = observer(() => {\n    const store = useRootStore().clientStore\n    const uiStore = store.rootStore.uiStore\n    const [isVisible, setIsVisible] = useState(false);\n    const onNewClientAdded = (id: number | null) => {\n        setIsVisible(false)\n        if (id) {\n            runInAction(() => {\n                uiStore.selectedClientId = id\n            })\n        }\n    }\n    const onCreateOrder = () => {\n        runInAction(() => {\n            store.rootStore.uiStore.isCreateNewOrderVisible = true\n        })\n    }\n    const getBalance = () => {\n        const client = uiStore.selectedClient!\n        console.log(uiStore.selectedClientId, client)\n        return currencyFormatter(client.currencyCode).format(client.balance)\n    }\n    return (\n        <div className={styles.clientsMain} >\n            <div className={styles.selector}>\n                <div className={isVisible ? styles.hidden : \"\"}>\n                    <IconButton\n                        type=\"add\"\n                        onClick={() => setIsVisible(true)}\n                        disabled={() => false}\n                        style={{ top: 1, marginRight: 5 }}\n                    >Add new client</IconButton>\n                    <select value={uiStore.selectedClientId} onChange={(e) => uiStore.selectedClientId = parseInt(e.target.value)}>\n                        {store.clients.map(client =>\n                            <option key={client.id} value={client.id}>({client.countryCode}) {client.name}</option>\n                        )}\n                    </select>\n                    <span className={styles.balance}> {getBalance()}</span>\n                    <IconButton\n                        type=\"cart\"\n                        disabled={() => !!store.rootStore.uiStore.isCreateNewOrderVisible}\n                        onClick={onCreateOrder}\n                        style={{ marginRight: 2 }}\n                    />\n                </div>\n                <AddNewClientView hidden={!isVisible} onClientAdd={id => onNewClientAdded(id)} />\n            </div>\n            <br />\n            {store.rootStore.uiStore.isCreateNewOrderVisible &&\n                <CreateNewOrderView onNewOrderCreated={(id) => { console.log('orderId: ' + id) }} className={styles.cnov} />\n            }\n            <div className={styles.orders}>\n                <OrderListView clientId={uiStore.selectedClientId} />\n                <OrderView order={store.rootStore.uiStore.selectedOrder} />\n                <div className={styles.purchases}>\n                    <PurchasesByCountry />\n                </div>\n            </div>\n            {/* <span style={{ scolor: 'blue' }}>ClientsMainView</span> */}\n        </div >\n    );\n})\n\nexport default ClientsMainView;\n","// extracted by mini-css-extract-plugin\nexport default {\"rate\":\"RateView_rate__yuCQZ\",\"name\":\"RateView_name__bc1Cl\",\"value\":\"RateView_value__3SdBh\"};","import React, { FC } from 'react';\nimport arrUp from './arrowup.png'\nimport arrDown from './arrowdown.png'\nimport { Rate } from '../../../store/exchangeStore';\nimport { observer } from 'mobx-react';\nimport Flags from 'country-flag-icons/react/3x2'\nimport styles from './RateView.module.scss';\n\ninterface Props {\n    rate: Rate\n}\n\nconst RateView: FC<Props> = observer(({ rate }) => {\n    const Flag = Flags[rate.countryCode]\n    return (\n        <div className={styles.rate}>\n            <Flag height=\"10px\" />\n            <span className={styles.name}>{rate.currencyName}</span>\n            <span className={styles.value}>{rate.valueStr}</span>\n            {rate.trend !== 'same' && <img style={{ height: \"10px\", width: \"15px\" }} src={rate.trend === 'up' ? arrUp : arrDown}></img>}\n        </div>\n    );\n})\n\nexport default RateView;\n","// extracted by mini-css-extract-plugin\nexport default {\"exchange\":\"ExchangeView_exchange__xdOPQ\"};","import { observer } from 'mobx-react';\nimport React, { FC } from 'react';\nimport { Rate } from '../../../store/exchangeStore';\nimport RateView from '../RateView/RateView';\nimport styles from './ExchangeView.module.scss'\n\ninterface Props {\n    rates: Rate[]\n}\n\nconst ExchangeView: FC<Props> = observer(({ rates }) => {\n    return (\n        <div className={styles.exchange}>\n            {rates.map(rate => <RateView rate={rate} key={rate.currencyCode} />)}\n        </div>\n    );\n})\n\nexport default ExchangeView;\n","// extracted by mini-css-extract-plugin\nexport default {\"exchangeMain\":\"ExchangeMainView_exchangeMain__sW+zs\"};","import { observer } from 'mobx-react';\nimport React, { FC } from 'react';\nimport { Rate } from '../../../store/exchangeStore';\nimport ExchangeView from '../ExchangeView/ExchangeView';\nimport styles from './ExchangeMainView.module.scss'\n\ninterface Props {\n    rates: Rate[]\n}\n\nconst ExchangeMainView: FC<Props> = observer(({ rates }) => {\n    return (\n        <div className={styles.exchangeMain}>\n            <ExchangeView rates={rates} />\n        </div>\n    );\n})\n\nexport default ExchangeMainView;\n","import React, { useEffect, useState } from 'react';\nimport styles from './McDondals.module.scss';\nimport { observer } from 'mobx-react'\nimport { useRootStore } from './RootStoreContext';\nimport DondalsMainView from './components/Dondal/DondalsMainView/DondalsMainView';\nimport ClientsMainView from './components/Client/ClientsMainView/ClientsMainView';\nimport ExchangeMainView from './components/Exchange/ExchangeMainView/ExchangeMainView';\n\nconst McDondals = observer(() => {\n    console.log('--- rendering McDondals')\n    console.log('<useRootStore>')\n    const store = useRootStore()\n    console.log('</useRootStore>')\n\n    return (\n        <div className={styles.container}>\n            <DondalsMainView />\n            <ClientsMainView />\n            <ExchangeMainView rates={store.exchangeStore.rates} />\n            <br />\n            <button onClick={store.clientStore.reset}>Reset clients</button>\n            <button onClick={store.orderStore.reset}>Reset orders</button>\n        </div>\n    );\n})\n\nexport default McDondals;\n","import React from 'react';\nimport McDondals from './McDondals';\nimport { RootStoreProvider } from './RootStoreContext';\n\nconst McDondalsWrapped = () => {\n    return (\n        <RootStoreProvider>\n            <McDondals />\n        </RootStoreProvider>\n    );\n}\n\nexport default McDondalsWrapped;\n"],"names":["RegionalSettings","currencyCode","currencyName","currencyMin","locale","country","CurrencyCountry","currencyFormatter","settings","Object","entries","map","entry","find","Intl","NumberFormat","style","currency","Client","id","name","countryCode","balance","makeObservable","observable","ClientDto","this","initialClients","ClientStore","rootStore","storage","clients","addClient","reset","save","console","log","JSON","stringify","length","clientFromDto","dto","orderStore","uiStore","selectedClientId","client","Math","max","includes","push","parse","load","action","MenuItem","dondalId","price","initialMenuItems","Dondal","terminated","toJS","initialDondals","DondalsStore","dondals","menuItems","addRandomDondal","addMenuItem","dondal","floor","random","Date","now","menuItem","updateMenuItem","removeMenuItem","addDondal","Error","filter","Rate","range","valueStr","trend","dispose","isDisposing","value","computed","setNextTick","setTimeout","rateStr","rate","from","to","dotIdx","toString","indexOf","i","toFixed","getRate","parseFloat","runInAction","reaction","fireImmediately","scheduler","fn","ExchangeStore","currencyList","rates","forEach","ratesObj","obj","OrderItemDto","orderId","item","quantity","OrderItem","store","orders","order","OrderDto","clientId","orderCurrencyCode","paymentCurrencyCode","isPaid","isDelivered","paid","Order","items","total","addItem","orderItems","reduce","clientStore","orderItem","oi","initialOrders","initialOrderItems","OrderStore","addOrder","addOrderItem","orderFromDto","orderItemFromDto","LocalStorage","key","localStorage","setItem","getItem","UiStore","selectedDondalId","isCreateNewOrderVisible","newOrderTotal","newOrderClientsTotal","selectedOrderId","selectedClient","selectedDondal","selectedOrder","dondalsStore","RootStore","exchangeStore","RootStoreContext","createContext","undefined","RootStoreProvider","children","useState","state","useEffect","Provider","useRootStore","useContext","setDondalId","props","setCountryCode","setName","refName","useRef","current","focus","className","styles","onChange","e","target","type","ref","onClick","trim","Flag","Flags","src","alt","editingMode","setEditingMode","setPrice","refPrice","select","isDisabled","mi","disabled","placeholder","MenuView","observer","amount","format","marginBottom","sort","item1","item2","refresh","remove","height","parseInt","top","left","onNewOrderCreated","isVisible","qty","setQty","calcTotal","color","clientsTotal","calcClientsTotal","refUl","o1","o2","scroll","onSelectOrder","background","ButtonIconData","add","code","tooltip","edit","restore","cart","cancel","xmark","exit","onSelect","flag","selected","handleChange","hidden","onClientAdd","setFlag","marginLeft","spendings","o","r","values","acc","curr","colors","sectors","currSector","countries2show","keys","fraction","sector","join","cc","setIsVisible","marginRight","getBalance","onNewClientAdded","width"],"sourceRoot":""}